{"version":3,"sources":["routes/endpoints.ts","components/organisms/WellcomeArea/index.tsx","assets/additionalFuntions/index.ts","assets/img/beautyBackground.svg","assets/img/beautyBackgroundMobile.svg","components/atoms/BeautifulBackground/index.tsx","assets/img/info.svg","components/atoms/InputField/index.tsx","components/atoms/Button/index.tsx","assets/img/refresh.svg","components/atoms/Captcha/index.tsx","components/atoms/Text/index.tsx","store/loginFormStore.ts","components/molecules/LoginForm/index.tsx","store/registerFormStore.ts","assets/img/droparrow.svg","components/atoms/SelectorInput/index.tsx","store/genderListStore.ts","components/molecules/RegisterForm/index.tsx","assets/img/chatlogo.svg","components/atoms/AppLogo/index.tsx","components/molecules/WellcomeHeader/index.tsx","components/templates/AuthLayout/index.tsx","pages/Authorization/index.tsx","assets/img/defaultAvatar.svg","components/atoms/Avatar/index.tsx","assets/img/accounticon.svg","components/organisms/AppHeader/index.tsx","assets/img/maleIcon.svg","assets/img/femaleIcon.svg","assets/img/nousericon.svg","components/molecules/UserCard/index.tsx","store/userListStore.ts","components/organisms/UserList/index.tsx","assets/img/fileIcon.svg","components/atoms/Image/index.tsx","components/atoms/FileIcon/index.tsx","components/molecules/Message/index.tsx","assets/img/backIcon.svg","components/molecules/ChatHeader/index.tsx","assets/img/sendMessage.svg","assets/img/pinFile.svg","store/websocketStore.ts","store/myProfileDataStore.ts","components/molecules/ChatInput/index.tsx","store/chatStore.ts","components/organisms/ChatArea/index.tsx","assets/img/chatBeautyBackground.svg","components/templates/ChatLayout/index.tsx","pages/Chat/index.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["SCREENS","WellcomeArea","authPage","authHeader","className","allowedFileTypes","isFunction","obj","sizeConvert","size","newSize","toFixed","getGenderList","a","fetch","URLS","API_URL","response","ok","json","status","catchFileNameFromPath","path","separatingPath","split","length","BeautifulBackground","loginBg","BeautyBG","window","matchMedia","matches","BeautyBGMobile","src","alt","InputField","placeholder","label","type","msg","readonly","children","registerInput","useState","inputStyle","setInputStyle","onFocus","onBlur","readOnly","InfoIcon","Button","text","style","onClick","isLink","Captcha","captchaImg","setCaptchaImg","fetchCaptcha","method","credentials","blob","imgBlob","URL","createObjectURL","useEffect","catch","err","console","log","refreshIcon","Text","isHeader","weight","color","styleText","undefined","fontSize","fontWeight","parseInt","fetchLoginFx","createEffect","data","form","FormData","append","login","password","captcha","body","$LoginForm","createStore","on","doneData","state","connectKey","newState","localStorage","setItem","location","pathname","SCREEN_CHAT","formError","loginSchema","yup","required","min","max","LoginForm","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","history","useHistory","loginForm","useStore","onSubmit","message","push","setRegisterError","createEvent","setHandleRegisterSubmit","$RegisterForm","handleRegisterSubmit","handler","SelectorInput","optionList","setValue","option","setOption","isClosed","setIsClosed","handleOptionClick","event","value","currentTarget","getAttribute","prevState","find","element","id","name","onChange","then","ref","DropArrow","map","setGenderList","$genderListStore","genders","registerSchema","password_confirm","oneOf","gender_id","RegisterForm","registerForm","genderListStore","optionsList","setOptionList","genderArray","gender","toUpperCase","slice","AppLogo","ChatLogo","WellcomeHeader","headerText","underText","AuthLayout","useLocation","SCREEN_LOGIN","SCREEN_REGISTER","Authorization","responseBody","Avatar","avatarImage","DefaultAvatar","AppHeader","AccountIcon","boxShadow","UserCard","userCard","username","recentMsg","isFromMe","selected","handleClickUserCard","isSelected","avatar","maleIcon","femaleIcon","unknownIcon","setUserStore","removeUsersFromStore","updateUsersStore","updateUserSelect","$userList","users","user","newUser","isOnline","splice","webSocket","send","JSON","stringify","NoUserIconStyle","height","width","borderRadius","UserList","handleUserCardClick","userList","setUserList","userListStore","index","NoUserIcon","Image","FileIcon","filepath","filename","fileSize","filePreview","DocIcon","fileFormat","file","setFile","xhr","XMLHttpRequest","open","responseType","onreadystatechange","this","readyState","DONE","newfile","href","Message","messageItem","files","ChatHeader","chattingUser","lastSeen","handleBackClick","BackIcon","setWebsocket","$WebsocketStore","websocket","setMyProfileDataStore","$MyProfileDataStore","ChatInput","setProgress","isLoaded","setIsLoaded","inputMessage","setInputMessage","fileError","setFileError","filesUrls","setFilesUrls","useParams","myProfileDataStore","websocketStore","preventDefault","usersender","userreciver","PinIcon","mimeType","reqParams","params","url","events","e","response_text","responseText","parse","success","error","statusText","wait","index_param","index_file","item","progress","upload","onprogress","setRequestHeader","withCredentials","AJAX","loaded","total","SendIcon","setMessages","saveMessage","$ChatStore","localChats","getItem","userName","forEach","messages","ChatArea","chatRef","createRef","chatStore","setChattingUser","current","scrollTo","scrollHeight","msgs","ChatLayout","isChatDisplay","displayStyle","backgroundImage","chatSlider","marginLeft","Chat","replaceAll","setIsChatDisplay","WebSocket","WS_URL","onmessage","messageData","decodeMsg","array","onopen","onclose","removeItem","withRouter","exact","SCREEN_CONVERSATION","to","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52306223.chunk.js","sourcesContent":["export enum SCREENS {\n  SCREEN_LOGIN = '/login',\n  SCREEN_REGISTER = '/signup',\n  SCREEN_CHAT = '/chat',\n  SCREEN_CONVERSATION = '/chat/:username',\n}\n","import './style.scss'\r\nimport React, { ReactElement } from 'react'\r\n\r\ninterface WellcomeAreaProps {\r\n  authPage: ReactElement\r\n  authHeader: ReactElement\r\n}\r\n\r\nconst WellcomeArea: React.FC<WellcomeAreaProps> = ({\r\n  authPage,\r\n  authHeader,\r\n}) => {\r\n  return (\r\n    <div className=\"wellcomeArea\">\r\n      {authHeader}\r\n      {authPage}\r\n    </div>\r\n  )\r\n}\r\nexport default WellcomeArea\r\n","import URLS from '../../ApiUrl.json'\n\nconst allowedFileTypes = [\n  'video/mp4',\n  'video/ogg',\n  'video/webm',\n  'audio/mpeg',\n  'audio/ogg',\n  'image/jpeg',\n  'image/gif',\n  'image/png',\n  'image/svg+xml',\n]\n\nexport type Gender = {\n  id: string\n  gender: string\n}\n\nexport function isFunction(obj: any) {\n  return obj && typeof obj == 'function'\n}\n\nexport function sizeConvert(size: number): string {\n  let newSize = size / 1024\n  if (newSize > 512) {\n    newSize = newSize / 1024\n    if (newSize > 512) {\n      newSize = newSize / 1024\n      return `${newSize.toFixed(2)} GB`\n    } else {\n      return `${newSize.toFixed(2)} MB`\n    }\n  } else {\n    return `${newSize.toFixed(2)} KB`\n  }\n}\nexport const getGenderList = async () => {\n  const response = await fetch(`${URLS.API_URL}/api/auth`)\n  if (response.ok) {\n    return await response.json()\n  } else {\n    return `Request error: ${response.status}`\n  }\n}\nexport function catchFileNameFromPath(path: string): string {\n  const separatingPath: string[] = path.split('/')\n  return separatingPath[separatingPath.length - 1].split('.')[0]\n}\n\nexport function AJAX(params: {\n  url: string\n  method: string\n  events?: {\n    wait?: () => void\n    success?: (response_text: string, xhr: XMLHttpRequest) => void\n    error?: (response_text: string, xhr: XMLHttpRequest) => void\n    progress?: (event: ProgressEvent) => void\n  }\n  data?: any\n}) {\n  if (!params.url) {\n    return\n  }\n\n  params.method = params.method || 'POST'\n  params.events = params.events || {}\n\n  let xhr: XMLHttpRequest\n\n  try {\n    // For: chrome, firefox, safari, opera, yandex, ...\n    xhr = new XMLHttpRequest()\n  } catch (e) {\n    console.log('Not completable browser')\n    return\n  }\n\n  xhr.onreadystatechange = function () {\n    // ready states:\n    // 0: uninitialized\n    // 1: loading\n    // 2: loaded\n    // 3: interactive\n    // 4: complete\n\n    if (xhr.readyState == 4) {\n      // when result is ready\n\n      let response_text = xhr.responseText\n\n      try {\n        response_text = JSON.parse(response_text)\n      } catch (e) {\n        console.log(e)\n      }\n\n      if (xhr.status === 200) {\n        // on success\n        if (isFunction(params.events?.success) && params.events?.success) {\n          params.events.success(response_text, xhr)\n        }\n      } else {\n        // on error\n        if (isFunction(params.events?.error) && params.events?.error) {\n          console.log(xhr.status + ': ' + xhr.statusText)\n          params.events.error(response_text, xhr)\n        }\n      }\n    } else {\n      // waiting for result\n      if (isFunction(params.events?.wait) && params.events?.wait) {\n        params.events.wait()\n      }\n    }\n  }\n\n  let data = null\n  params.data = params.data || {}\n  if (params.data.files) {\n    params.method = 'POST'\n\n    data = new FormData()\n    for (const index_param in params.data) {\n      if (typeof params.data[index_param] == 'object') {\n        for (const index_file in params.data[index_param]) {\n          const item = params.data[index_param][index_file]\n          if (typeof item == 'object') {\n            data.append(index_file, item, item.name)\n          } else {\n            data.append(index_file, item)\n          }\n        }\n      } else {\n        data.append(index_param, params.data[index_param])\n      }\n    }\n    if (isFunction(params.events?.progress)) {\n      xhr.upload.onprogress = function (event) {\n        // 'progress: ' + event.loaded + ' / ' + event.total;\n        if (params.events?.progress) {\n          params.events.progress(event)\n        }\n      }\n    }\n  }\n\n  params.method = params.method.toUpperCase()\n\n  if (params.method == 'GET' && data) {\n    params.url += '?' + data\n  }\n  xhr.open(params.method, params.url, true)\n\n  if (!params.data.files) {\n    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded')\n  }\n\n  xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest')\n  xhr.withCredentials = true\n  xhr.send(data)\n}\n\nexport function isAllowedDataFile(mimeType: string) {\n  return allowedFileTypes.find((value) => {\n    return value === mimeType\n  })\n}\n","export default __webpack_public_path__ + \"static/media/beautyBackground.a8851126.svg\";","export default __webpack_public_path__ + \"static/media/beautyBackgroundMobile.12d55e91.svg\";","import React from 'react'\r\nimport './style.scss'\r\nimport { catchFileNameFromPath } from '../../../assets/additionalFuntions'\r\nimport BeautyBG from '../../../assets/img/beautyBackground.svg'\r\nimport BeautyBGMobile from '../../../assets/img/beautyBackgroundMobile.svg'\r\n\r\nconst BeautifulBackground: React.FC = () => {\r\n  let loginBg: string = BeautyBG\r\n  if (window.matchMedia('(max-width: 768px)').matches) {\r\n    loginBg = BeautyBGMobile\r\n  }\r\n  return (\r\n    <img\r\n      className=\"beautyBackground\"\r\n      src={loginBg}\r\n      alt={catchFileNameFromPath(loginBg)}\r\n    />\r\n  )\r\n}\r\nexport default BeautifulBackground\r\n","export default __webpack_public_path__ + \"static/media/info.410775e6.svg\";","import React, { useState } from 'react'\r\nimport './style.scss'\r\nimport InfoIcon from '../../../assets/img/info.svg'\r\nimport { catchFileNameFromPath } from '../../../assets/additionalFuntions'\r\nimport { UseFormRegisterReturn } from 'react-hook-form'\r\n\r\ntype InputFieldsProps = {\r\n  placeholder: string\r\n  label: string\r\n  type?: string\r\n  msg?: string\r\n  readonly?: boolean\r\n  children?: React.ReactElement | string\r\n  registerInput: UseFormRegisterReturn\r\n}\r\n\r\nconst InputField: React.FC<InputFieldsProps> = ({\r\n  placeholder = 'InputText',\r\n  label = 'Input field',\r\n  type = 'text',\r\n  msg = '',\r\n  readonly = false,\r\n  children,\r\n  registerInput,\r\n}) => {\r\n  const [inputStyle, setInputStyle] = useState<string>('regular')\r\n  const handleBlurInput = () => {\r\n    setInputStyle('regular')\r\n  }\r\n  const handleFocusInput = () => {\r\n    setInputStyle('typing')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <label className=\"inputField\">\r\n        <span className=\"inputField-label\">{label}</span>\r\n        <input\r\n          {...registerInput}\r\n          className={`inputField-input inputField-input__${inputStyle}`}\r\n          type={type}\r\n          onFocus={handleFocusInput}\r\n          onBlur={handleBlurInput}\r\n          placeholder={placeholder}\r\n          readOnly={readonly}\r\n        />\r\n        {msg ? (\r\n          <>\r\n            <img\r\n              className=\"inputField-msgIcon\"\r\n              src={InfoIcon}\r\n              alt={catchFileNameFromPath(InfoIcon)}\r\n            />\r\n            <p className={`inputField-msg inputField-msg__error`}>{msg}</p>\r\n          </>\r\n        ) : null}\r\n      </label>\r\n      {children}\r\n    </>\r\n  )\r\n}\r\nexport default InputField\r\n","import React from 'react'\r\nimport './style.scss'\r\n\r\nexport interface ButtonProps {\r\n  children?: React.ReactElement | string\r\n  text: string\r\n  isLink?: boolean\r\n  style?: string\r\n  type?: 'button' | 'submit' | 'reset' | undefined\r\n  onClick?: (event: React.FormEvent<HTMLButtonElement>) => void\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({\r\n  text,\r\n  style = 'regular',\r\n  onClick,\r\n  isLink = false,\r\n  type = 'button',\r\n  children,\r\n}) => {\r\n  return (\r\n    <button\r\n      type={type}\r\n      className={`button ${isLink ? 'button-link' : ''} ${\r\n        isLink ? 'button-link' : 'button'\r\n      }__${style}`}\r\n      onClick={onClick}\r\n    >\r\n      {text}\r\n      {children}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button\r\n","export default __webpack_public_path__ + \"static/media/refresh.2a155de8.svg\";","import React, { useEffect, useState } from 'react'\r\nimport { catchFileNameFromPath } from '../../../assets/additionalFuntions'\r\nimport { UseFormRegisterReturn } from 'react-hook-form'\r\nimport URLS from '../../../ApiUrl.json'\r\nimport './style.scss'\r\nimport refreshIcon from '../../../assets/img/refresh.svg'\r\n\r\ninterface CaptchaProps {\r\n  registerInput: UseFormRegisterReturn\r\n  msg?: string\r\n}\r\n\r\nconst Captcha: React.FC<CaptchaProps> = ({ registerInput, msg }) => {\r\n  const [captchaImg, setCaptchaImg] = useState<string>('')\r\n\r\n  const handleRefreshCaptchaClick = () => {\r\n    fetchCaptcha().catch((err) => {\r\n      console.log(err)\r\n    })\r\n  }\r\n  const fetchCaptcha = async () => {\r\n    const response = await fetch(`${URLS.API_URL}/api/auth/captcha`, {\r\n      method: 'GET',\r\n      credentials: 'include',\r\n    })\r\n    if (response.ok) {\r\n      const imgBlob = await response.blob()\r\n      setCaptchaImg(URL.createObjectURL(imgBlob))\r\n    } else {\r\n      return `Error: ${response.status}`\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    fetchCaptcha().catch((err) => {\r\n      console.log(err)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"captcha\">\r\n      <label className=\"captcha-input\">\r\n        <span className=\"captcha-label\">Security code</span>\r\n        <input\r\n          className=\"captcha-inputField\"\r\n          {...registerInput}\r\n          type=\"text\"\r\n          placeholder=\"Security code\"\r\n        />\r\n        {msg ? <p className=\"captcha-msg captcha-msg__error\">{msg}</p> : null}\r\n      </label>\r\n      <div className=\"captcha-refresh\">\r\n        <img\r\n          className=\"captcha-image\"\r\n          src={captchaImg}\r\n          alt={catchFileNameFromPath(captchaImg)}\r\n        />\r\n        <img\r\n          className=\"captcha-refreshIcon\"\r\n          onClick={handleRefreshCaptchaClick}\r\n          src={refreshIcon}\r\n          alt={catchFileNameFromPath(refreshIcon)}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Captcha\r\n","import React from 'react'\r\nimport './style.scss'\r\n\r\ninterface TextProps {\r\n  type?: string\r\n  text?: string\r\n  isHeader?: boolean\r\n  size?: string\r\n  weight?: string\r\n  color?: string\r\n  children?: React.ReactElement | string\r\n}\r\n\r\nconst Text: React.FC<TextProps> = ({\r\n  isHeader = false,\r\n  type = '1',\r\n  text = ' ',\r\n  children,\r\n  size,\r\n  weight,\r\n  color,\r\n}) => {\r\n  const styleText: React.CSSProperties = {}\r\n  if (size !== undefined) {\r\n    styleText.fontSize = size\r\n  }\r\n  if (weight !== undefined) {\r\n    styleText.fontWeight = parseInt(weight)\r\n  }\r\n  if (color !== undefined) {\r\n    styleText.color = color\r\n  }\r\n  return (\r\n    <>\r\n      {isHeader ? (\r\n        <p\r\n          className={`textBlock-header textBlock-header__${type}`}\r\n          style={styleText}\r\n        >\r\n          {text}\r\n        </p>\r\n      ) : (\r\n        <p\r\n          className={`textBlock-plain textBlock-plain__${type}`}\r\n          style={styleText}\r\n        >\r\n          {text}\r\n        </p>\r\n      )}\r\n      {children}\r\n    </>\r\n  )\r\n}\r\nexport default Text\r\n","import { createEffect, createStore } from 'effector'\nimport { ILoginFormInputs } from '../components/molecules/LoginForm'\nimport URLS from '../ApiUrl.json'\nimport { SCREENS } from '../routes/endpoints'\n\nexport interface LoginFormStore {\n  formError?: string\n  connectKey?: string\n}\n\nexport const fetchLoginFx = createEffect<\n  ILoginFormInputs,\n  { status: number; text: string }\n>(async (data) => {\n  const form: FormData = new FormData()\n  form.append('login', data.login)\n  form.append('password', data.password)\n  form.append('captcha', data.captcha)\n  const response = await fetch(`${URLS.API_URL}/api/auth/login`, {\n    method: 'POST',\n    body: form,\n    credentials: 'include',\n  })\n\n  if (response.ok) {\n    return { status: response.status, text: await response.text() }\n  } else if (response.status == 400) {\n    return { status: response.status, text: await response.text() }\n  } else {\n    return { status: response.status, text: await response.text() }\n  }\n})\n\nexport const $LoginForm = createStore<LoginFormStore>({}).on(\n  fetchLoginFx.doneData,\n  (state, connectKey) => {\n    const newState: LoginFormStore = state\n    if (connectKey.status === 200) {\n      localStorage.setItem('websocket', connectKey.text)\n      window.location.pathname = SCREENS.SCREEN_CHAT\n      newState.connectKey = connectKey.text\n    } else {\n      newState.formError = connectKey.text\n    }\n    return newState\n  }\n)\n","import React from 'react'\r\nimport InputField from '../../atoms/InputField'\r\nimport Button from '../../atoms/Button'\r\nimport './style.scss'\r\nimport Captcha from '../../atoms/Captcha'\r\nimport * as yup from 'yup'\r\nimport { useForm } from 'react-hook-form'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport Text from '../../atoms/Text'\r\nimport { $LoginForm, fetchLoginFx } from '../../../store/loginFormStore'\r\nimport { useStore } from 'effector-react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\ninterface LoginFormProps {\r\n  children?: React.ReactElement | string\r\n}\r\n\r\nexport interface ILoginFormInputs {\r\n  login: string\r\n  password: string\r\n  captcha: string\r\n}\r\nconst loginSchema = yup\r\n  .object({\r\n    login: yup.string().required('Login is required'),\r\n    password: yup.string().required('Password is required'),\r\n    captcha: yup\r\n      .string()\r\n      .required('Captcha is required')\r\n      .min(5, 'Captcha has 5 characters')\r\n      .max(5, 'Captcha has 5 characters'),\r\n  })\r\n  .required()\r\n\r\nconst LoginForm: React.FC<LoginFormProps> = ({ children = '' }) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<ILoginFormInputs>({\r\n    resolver: yupResolver(loginSchema),\r\n  })\r\n  const history = useHistory()\r\n  const loginForm = useStore($LoginForm)\r\n\r\n  const handleRegisterClick = () => {\r\n    history.push('/signup')\r\n  }\r\n  return (\r\n    <form className=\"loginForm\" onSubmit={handleSubmit(fetchLoginFx)}>\r\n      <div className=\"loginForm-inputGroup\">\r\n        <InputField\r\n          msg={errors.login?.message}\r\n          registerInput={register('login')}\r\n          placeholder=\"Input user name\"\r\n          label=\"User name\"\r\n        />\r\n        <InputField\r\n          msg={errors.password?.message}\r\n          registerInput={register('password')}\r\n          placeholder=\"Input password\"\r\n          label=\"Input password\"\r\n          type=\"password\"\r\n        />\r\n        <Captcha\r\n          registerInput={register('captcha')}\r\n          msg={errors.captcha?.message}\r\n        />\r\n      </div>\r\n      {children}\r\n      {loginForm.formError ? (\r\n        <div className=\"loginForm-formError\">\r\n          <Text text={loginForm.formError} />\r\n        </div>\r\n      ) : null}\r\n      <div className=\"loginForm-btnGroup\">\r\n        <Button type=\"submit\" text=\"Log in\" />\r\n        <Button\r\n          type=\"button\"\r\n          isLink\r\n          text=\"Registration\"\r\n          onClick={handleRegisterClick}\r\n        />\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","import { IRegisterFormInputs } from '../components/molecules/RegisterForm'\nimport { SubmitHandler } from 'react-hook-form'\nimport { createEvent, createStore } from 'effector'\n\nexport interface RegisterFormStore {\n  handleRegisterSubmit: SubmitHandler<IRegisterFormInputs>\n  formError?: string\n}\nexport const setRegisterError = createEvent<string>()\nexport const setHandleRegisterSubmit =\n  createEvent<(data: IRegisterFormInputs) => void>()\n\nexport const $RegisterForm = createStore<RegisterFormStore>({\n  handleRegisterSubmit: () => {\n    return 0\n  },\n})\n  .on(setRegisterError, (state, data) => {\n    state.formError = data\n  })\n  .on(setHandleRegisterSubmit, (state, handler) => {\n    state.handleRegisterSubmit = handler\n  })\n","export default __webpack_public_path__ + \"static/media/droparrow.6d562a0b.svg\";","import React, { useState } from 'react'\nimport { IRegisterFormInputs, Option } from '../../molecules/RegisterForm'\nimport { UseFormRegisterReturn, UseFormSetValue } from 'react-hook-form'\nimport './style.scss'\nimport DropArrow from '../../../assets/img/droparrow.svg'\nimport { catchFileNameFromPath } from '../../../assets/additionalFuntions'\n\ninterface SelectorInputProps {\n  optionList: Array<Option>\n  registerInput: UseFormRegisterReturn\n  msg?: string\n  label?: string\n  placeholder?: string\n  setValue: UseFormSetValue<IRegisterFormInputs>\n}\n\nconst SelectorInput: React.FC<SelectorInputProps> = ({\n  optionList,\n  registerInput,\n  setValue,\n  msg,\n  label = 'Select Option',\n  placeholder = 'Select Option',\n}) => {\n  const [option, setOption] = useState<string>('1')\n  const [isClosed, setIsClosed] = useState<boolean>(true)\n  const handleOptionClick = (event: React.MouseEvent<HTMLElement>) => {\n    setIsClosed(true)\n    const value = event.currentTarget.getAttribute('value')\n    if (value) {\n      setOption(value)\n      setValue('gender_id', value)\n    }\n  }\n  const handleOptionChange = (event: React.FormEvent<HTMLInputElement>) => {\n    registerInput.onChange(event).then(() => {\n      const value = event.currentTarget.getAttribute('value')\n      if (value) {\n        event.currentTarget.value = value\n      }\n    })\n  }\n  const handleFakeInputClick = () => {\n    setIsClosed((prevState) => !prevState)\n  }\n  return (\n    <div className=\"optionSelector\">\n      <label className=\"optionSelector-label\">\n        <p>{label}</p>\n        <input\n          className=\"optionSelector-fakeinput\"\n          placeholder={placeholder}\n          onClick={handleFakeInputClick}\n          readOnly\n          value={\n            optionList.find((element) => {\n              if (element.id === option) {\n                return element.name\n              } else {\n                return false\n              }\n            })?.name\n          }\n        />\n        <input\n          className=\"optionSelector-input\"\n          readOnly\n          onChange={handleOptionChange}\n          onBlur={registerInput.onBlur}\n          ref={registerInput.ref}\n          placeholder=\"Choose gender\"\n        />\n      </label>\n      <img\n        className=\"optionSelector-dropicon\"\n        src={DropArrow}\n        alt={catchFileNameFromPath(DropArrow)}\n      />\n      <ul\n        className={`optionSelector-list ${\n          isClosed\n            ? 'optionSelector-list__closed'\n            : 'optionSelector-list__opened'\n        }`}\n      >\n        {optionList.map((value) => {\n          return (\n            <li\n              className=\"optionSelector-element\"\n              key={value.id}\n              onClick={handleOptionClick}\n              value={value.id}\n            >\n              {value.name}\n            </li>\n          )\n        })}\n      </ul>\n      {msg ? (\n        <>\n          <p className={`optionSelector-msg optionSelector-msg__error`}>\n            {msg}\n          </p>\n        </>\n      ) : null}\n    </div>\n  )\n}\nexport default SelectorInput\n","import { createEvent, createStore } from 'effector'\r\nimport { Gender } from '../assets/additionalFuntions'\r\n\r\nexport interface genderListResponse {\r\n  genders: Array<Gender>\r\n}\r\n\r\nexport const setGenderList = createEvent<genderListResponse>()\r\n\r\nexport const $genderListStore = createStore<Array<Gender>>([]).on(\r\n  setGenderList,\r\n  (state, data) => {\r\n    data?.genders.map((value) => {\r\n      state.push(value)\r\n    })\r\n  }\r\n)\r\n","import React, { useEffect, useState } from 'react'\nimport * as yup from 'yup'\nimport { useForm } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport { useStore } from 'effector-react'\nimport { $RegisterForm } from '../../../store/registerFormStore'\nimport InputField from '../../atoms/InputField'\nimport Captcha from '../../atoms/Captcha'\nimport SelectorInput from '../../atoms/SelectorInput'\nimport { Gender } from '../../../assets/additionalFuntions'\nimport Text from '../../atoms/Text'\nimport Button from '../../atoms/Button'\nimport './style.scss'\nimport { useHistory } from 'react-router-dom'\nimport { $genderListStore, setGenderList } from '../../../store/genderListStore'\n\nexport type Option = {\n  id: string\n  name: string\n}\n\nexport interface IRegisterFormInputs {\n  login: string\n  password: string\n  password_confirm: string\n  name: string\n  gender_id: string\n  captcha: string\n}\n\nconst registerSchema = yup\n  .object({\n    login: yup.string().required('Login is required'),\n    password: yup\n      .string()\n      .required('Password is required')\n      .min(5, 'Password must be at least 5 characters'),\n    password_confirm: yup\n      .string()\n      .required('Confirm password is required')\n      .oneOf([yup.ref('password')], 'Password must match'),\n    name: yup\n      .string()\n      .required('Name is required')\n      .min(5, 'Name must be at least 5 characters'),\n    gender_id: yup.string().required('Gender is required'),\n    captcha: yup.string().required('Captcha is required'),\n  })\n  .required()\n\nconst RegisterForm: React.FC = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    setValue,\n  } = useForm<IRegisterFormInputs>({ resolver: yupResolver(registerSchema) })\n  const registerForm = useStore($RegisterForm)\n  const genderListStore = useStore($genderListStore)\n  const [optionsList, setOptionList] = useState<Array<Option>>([\n    { id: '0', name: 'default' },\n  ])\n\n  const history = useHistory()\n\n  const handleLoginClick = () => {\n    history.push('/login')\n  }\n\n  useEffect(() => {\n    const genderArray: Array<Option> = []\n    genderListStore.map((value: Gender) => {\n      genderArray.push({\n        id: value.id,\n        name: value.gender[0].toUpperCase() + value.gender.slice(1),\n      })\n    })\n    setOptionList(genderArray)\n  }, [setGenderList])\n\n  return (\n    <form\n      className=\"registerForm\"\n      onSubmit={handleSubmit(registerForm.handleRegisterSubmit)}\n    >\n      <div className=\"registerForm-inputGroup\">\n        <InputField\n          placeholder=\"Input user name\"\n          label=\"Input user name\"\n          registerInput={register('login')}\n          msg={errors.login?.message}\n        />\n        <InputField\n          placeholder=\"Create password\"\n          label=\"Create password\"\n          registerInput={register('password')}\n          msg={errors.password?.message}\n          type=\"password\"\n        />\n        <InputField\n          placeholder=\"Password confirmation\"\n          label=\"Password confirmation\"\n          registerInput={register('password_confirm')}\n          msg={errors.password_confirm?.message}\n          type=\"password\"\n        />\n        <InputField\n          placeholder=\"Nickname\"\n          label=\"Nickname\"\n          registerInput={register('name')}\n          msg={errors.name?.message}\n        />\n        <SelectorInput\n          label=\"Your gender\"\n          placeholder=\"Your gender\"\n          optionList={optionsList}\n          registerInput={register('gender_id')}\n          setValue={setValue}\n        />\n        <Captcha\n          registerInput={register('captcha')}\n          msg={errors.captcha?.message}\n        />\n      </div>\n      {registerForm.formError ? (\n        <div className=\"registerForm-formError\">\n          <Text text={registerForm.formError} color=\"red\" />\n        </div>\n      ) : null}\n      <div className=\"registerForm-btnGroup\">\n        <Button type=\"submit\" text=\"Sign up\" />\n        <Button type=\"button\" isLink text=\"Log in\" onClick={handleLoginClick} />\n      </div>\n    </form>\n  )\n}\nexport default RegisterForm\n","export default __webpack_public_path__ + \"static/media/chatlogo.c96a0da5.svg\";","import ChatLogo from '../../../assets/img/chatlogo.svg'\r\nimport React from 'react'\r\nimport { catchFileNameFromPath } from '../../../assets/additionalFuntions'\r\n\r\nconst AppLogo: React.FC = () => {\r\n  return (\r\n    <img\r\n      className=\"applogo\"\r\n      src={ChatLogo}\r\n      alt={catchFileNameFromPath(ChatLogo)}\r\n    />\r\n  )\r\n}\r\nexport default AppLogo\r\n","import React from 'react'\r\nimport Text from '../../atoms/Text'\r\nimport './style.scss'\r\nimport AppLogo from '../../atoms/AppLogo'\r\n\r\ninterface WellcomeHeaderProps {\r\n  headerText?: string\r\n  underText?: string\r\n  children?: React.ReactElement | string\r\n}\r\n\r\nconst WellcomeHeader: React.FC<WellcomeHeaderProps> = ({\r\n  headerText,\r\n  underText,\r\n  children,\r\n}) => {\r\n  return (\r\n    <div className=\"wellcomeHeader\">\r\n      <AppLogo />\r\n      <div className=\"wellcomeHeader-string\">\r\n        <Text text={`${headerText} `} type=\"1\" isHeader />\r\n        <Text text=\"Chatty\" isHeader type=\"1\" color=\"#5E93E7\" />\r\n        <Text text=\"!\" isHeader type=\"1\" color=\"#B3CDF8\" />\r\n      </div>\r\n      <Text text={underText} isHeader type=\"2\" />\r\n    </div>\r\n  )\r\n}\r\nexport default WellcomeHeader\r\n","import WellcomeArea from '../../organisms/WellcomeArea'\nimport BeautifulBackground from '../../atoms/BeautifulBackground'\nimport './style.scss'\nimport React from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { SCREENS } from '../../../routes/endpoints'\nimport LoginForm from '../../molecules/LoginForm'\nimport RegisterForm from '../../molecules/RegisterForm'\nimport WellcomeHeader from '../../molecules/WellcomeHeader'\n\nconst AuthLayout: React.FC = () => {\n  const path = useLocation()\n  let authPage = <LoginForm />\n  let authHeader = (\n    <WellcomeHeader headerText=\"Sign Up to&nbsp;\" underText=\"Registration\" />\n  )\n  if (path.pathname === SCREENS.SCREEN_LOGIN) {\n    authHeader = (\n      <WellcomeHeader\n        headerText=\"Wellcome to&nbsp;\"\n        underText=\"Please, authorize yourself\"\n      />\n    )\n    authPage = <LoginForm />\n  } else if (path.pathname === SCREENS.SCREEN_REGISTER) {\n    authHeader = (\n      <WellcomeHeader headerText=\"Sign Up to&nbsp;\" underText=\"Registration\" />\n    )\n    authPage = <RegisterForm />\n  }\n  return (\n    <section className=\"wellcomeTemplate\">\n      <article className=\"loginContainer\">\n        <WellcomeArea authPage={authPage} authHeader={authHeader} />\n      </article>\n      <BeautifulBackground />\n    </section>\n  )\n}\n\nexport default AuthLayout\n","import React, { useEffect } from 'react'\nimport AuthLayout from '../../components/templates/AuthLayout'\n\nimport URLS from '../../ApiUrl.json'\nimport { useHistory } from 'react-router-dom'\nimport { SCREENS } from '../../routes/endpoints'\nimport { $LoginForm } from '../../store/loginFormStore'\nimport { IRegisterFormInputs } from '../../components/molecules/RegisterForm'\nimport {\n  setHandleRegisterSubmit,\n  setRegisterError,\n} from '../../store/registerFormStore'\nimport { getGenderList } from '../../assets/additionalFuntions'\nimport { setGenderList } from '../../store/genderListStore'\n\n\nconst Authorization: React.FC = () => {\n  const history = useHistory<History>()\n  const handleRegisterSubmit = async (data: IRegisterFormInputs) => {\n    const form: FormData = new FormData()\n    form.append('login', data.login)\n    form.append('password', data.password)\n    form.append('password_confirm', data.password_confirm)\n    form.append('name', data.name)\n    form.append('gender_id', data.gender_id)\n    form.append('captcha', data.captcha)\n    const response = await fetch(`${URLS.API_URL}/api/auth/register`, {\n      method: 'POST',\n      body: form,\n      credentials: 'include',\n    })\n    if (response.ok) {\n      history.push(`${SCREENS.SCREEN_LOGIN}`)\n    } else if (response.status == 400) {\n      const responseBody = await response.text()\n      setRegisterError(responseBody)\n    }\n  }\n  useEffect(() => {\n    getGenderList()\n      .then((response) => {\n        setGenderList(response)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n    setHandleRegisterSubmit(handleRegisterSubmit)\n  }, [])\n  return <AuthLayout />\n}\nexport default Authorization\n","export default __webpack_public_path__ + \"static/media/defaultAvatar.639548b6.svg\";","import './style.scss'\r\n\r\nimport DefaultAvatar from '../../../assets/img/defaultAvatar.svg'\r\nimport React from 'react'\r\nimport { catchFileNameFromPath } from '../../../assets/additionalFuntions'\r\n\r\ninterface AvatarProps {\r\n  avatarImage?: string\r\n  style?: React.CSSProperties\r\n}\r\n\r\nconst Avatar: React.FC<AvatarProps> = ({\r\n  avatarImage = DefaultAvatar,\r\n  style,\r\n}) => {\r\n  return (\r\n    <img\r\n      style={style}\r\n      className=\"avatar\"\r\n      src={avatarImage}\r\n      alt={catchFileNameFromPath(avatarImage)}\r\n    />\r\n  )\r\n}\r\nexport default Avatar\r\n","export default __webpack_public_path__ + \"static/media/accounticon.dbb31048.svg\";","import AppLogo from '../../atoms/AppLogo'\r\nimport Avatar from '../../atoms/Avatar'\r\nimport './style.scss'\r\nimport AccountIcon from '../../../assets/img/accounticon.svg'\r\nimport React from 'react'\r\n\r\nconst AppHeader: React.FC = () => {\r\n  const AvatarStyle: React.CSSProperties = {\r\n    boxShadow: '0px 2px 8px rgba(0, 0, 0, 0.08)',\r\n  }\r\n  return (\r\n    <header className=\"appheader\">\r\n      <AppLogo />\r\n      <Avatar avatarImage={AccountIcon} style={AvatarStyle} />\r\n    </header>\r\n  )\r\n}\r\nexport default AppHeader\r\n","export default __webpack_public_path__ + \"static/media/maleIcon.97de65f1.svg\";","export default __webpack_public_path__ + \"static/media/femaleIcon.97de65f1.svg\";","export default __webpack_public_path__ + \"static/media/nousericon.2a176518.svg\";","import React from 'react'\nimport Avatar from '../../atoms/Avatar'\nimport Text from '../../atoms/Text'\nimport './style.scss'\nimport maleIcon from '../../../assets/img/maleIcon.svg'\nimport femaleIcon from '../../../assets/img/femaleIcon.svg'\nimport unknownIcon from '../../../assets/img/nousericon.svg'\n\nexport type UserCardItem = {\n  username: string\n  gender: string\n  recentMsg?: string\n  isFromMe?: boolean\n  isSelected: boolean\n  avatar?: string\n  lastSeen?: string\n  isOnline?: boolean\n}\nexport interface UserCardProps {\n  userCard?: UserCardItem\n  handleClickUserCard?: React.MouseEventHandler<HTMLDivElement>\n}\n\nconst UserCard: React.FC<UserCardProps> = ({\n  userCard = {\n    username: 'User name',\n    recentMsg: 'Hey!',\n    isFromMe: false,\n    selected: false,\n  },\n  handleClickUserCard,\n}) => {\n  const avatarImage = () => {\n    if (!userCard.avatar) {\n      return userCard.avatar\n    } else if (userCard.gender === 'male') {\n      return maleIcon\n    } else if (userCard.gender === 'female') {\n      return femaleIcon\n    } else {\n      return unknownIcon\n    }\n  }\n  return (\n    <div\n      onClick={handleClickUserCard}\n      data-username={userCard.username}\n      data-selected={userCard.isSelected}\n      className={`userCard`}\n    >\n      <Avatar avatarImage={avatarImage()} />\n      <div className=\"userCard-textBlock\">\n        <Text text={userCard.username} isHeader type=\"4\" />\n        <div className=\"userCard-msg\">\n          {userCard.isFromMe ? (\n            <Text\n              text=\"You:&nbsp;\"\n              type=\"2\"\n              color={userCard.isSelected ? '#FFFFFF' : '#5E93E7'}\n            />\n          ) : null}\n          <Text text={userCard.recentMsg} type=\"2\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default UserCard\n","import { createEvent, createStore } from 'effector'\nimport { UserCardItem } from '../components/molecules/UserCard'\n\nexport interface UserResponse {\n  name: string\n  gender: string\n}\n\nexport const setUserStore = createEvent<Array<UserResponse>>()\nexport const removeUsersFromStore = createEvent<void>()\nexport const updateUsersStore = createEvent<WebSocket>()\nexport const updateUserSelect = createEvent<string>()\n\nexport const $userList = createStore<Array<UserCardItem>>([])\n  .on(setUserStore, (state, users) => {\n    const newState: Array<UserCardItem> = []\n    users.map((user) => {\n      const newUser: UserCardItem = {\n        username: user.name,\n        gender: user.gender,\n        isSelected: false,\n        isOnline: true,\n      }\n      newState.push(newUser)\n    })\n    return newState\n  })\n  .on(removeUsersFromStore, (state) => {\n    state.splice(0, state.length)\n  })\n  .on(updateUsersStore, (state: Array<UserCardItem>, webSocket: WebSocket) => {\n    webSocket.send(JSON.stringify({ type: 'user_data' }))\n    webSocket.send(JSON.stringify({ type: 'users_list' }))\n  })\n  .on(updateUserSelect, (state: Array<UserCardItem>, username: string) => {\n    const newState: Array<UserCardItem> = state\n    newState.find((element) => {\n      element.isSelected = element.username === username\n    })\n    return newState\n  })\n","import React, { useEffect, useState } from 'react'\nimport UserCard, { UserCardItem } from '../../molecules/UserCard'\nimport Avatar from '../../atoms/Avatar'\nimport './style.scss'\nimport NoUserIcon from '../../../assets/img/nousericon.svg'\nimport Text from '../../atoms/Text'\nimport { useStore } from 'effector-react'\nimport { $userList} from '../../../store/userListStore'\n\ninterface UserListProps {\n  handleUserCardClick?: React.MouseEventHandler<HTMLDivElement>\n}\n\nconst NoUserIconStyle: React.CSSProperties = {\n  height: '200px',\n  width: '200px',\n  borderRadius: '100px',\n}\n\nconst UserList: React.FC<UserListProps> = ({ handleUserCardClick }) => {\n  const [userList, setUserList] = useState<Array<UserCardItem>>([])\n  const userListStore = useStore($userList)\n  useEffect(() => {\n    setUserList(userListStore)\n  }, [userListStore])\n  return (\n    <>\n      {userList?.length !== 0 && userList ? (\n        <div className=\"userList\">\n          {userList.map((value: UserCardItem, index: number) => {\n            return (\n              <UserCard\n                key={`${value.username}${index}`}\n                handleClickUserCard={handleUserCardClick}\n                userCard={value}\n              />\n            )\n          })}\n        </div>\n      ) : (\n        <div className=\"userList userList__noUser\">\n          <Avatar avatarImage={NoUserIcon} style={NoUserIconStyle} />\n          <Text text=\"There is no other users yet\" size=\"15px\" />\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default UserList\n","export default __webpack_public_path__ + \"static/media/fileIcon.8c96d83e.svg\";","import React from 'react'\r\nimport { catchFileNameFromPath } from '../../../assets/additionalFuntions'\r\nimport './style.scss'\r\n\r\ninterface ImageProps {\r\n  src: string\r\n}\r\n\r\nconst Image: React.FC<ImageProps> = ({ src }) => {\r\n  return <img className=\"image\" src={src} alt={catchFileNameFromPath(src)} />\r\n}\r\nexport default Image\r\n","import React, { useEffect, useState } from 'react'\nimport DocIcon from '../../../assets/img/fileIcon.svg'\nimport './style.scss'\nimport Text from '../Text'\nimport Image from '../Image'\nimport {\n  catchFileNameFromPath,\n  sizeConvert,\n} from '../../../assets/additionalFuntions'\n\nexport type File = {\n  filename: string\n  fileSize: string\n  filePreview: string\n  fileFormat: string\n}\n\ninterface FileIconProps {\n  filepath?: string\n}\n\nconst FileIcon: React.FC<FileIconProps> = ({ filepath = '' }) => {\n  const [file, setFile] = useState<File>({\n    filename: 'file_name_001',\n    fileSize: '2.4 MB',\n    filePreview: DocIcon,\n    fileFormat: 'doc',\n  })\n  useEffect(() => {\n    const xhr = new XMLHttpRequest()\n    xhr.open('GET', `${filepath}`, true)\n    xhr.responseType = 'blob'\n    xhr.onreadystatechange = function () {\n      if (this.readyState == this.DONE) {\n        const newfile: File = {\n          filename: catchFileNameFromPath(filepath),\n          filePreview: `${filepath}`,\n          fileSize: sizeConvert(this.response?.size),\n          fileFormat: this.response?.type,\n        }\n        setFile(newfile)\n      }\n    }\n    xhr.send(null)\n  }, [])\n  return (\n    <a className=\"file\" href={filepath}>\n      {file.fileFormat === 'image/jpg' ||\n      file.fileFormat === 'image/png' ||\n      file.fileFormat === 'image/jpeg' ||\n      file.fileFormat === 'image/gif' ? (\n        <Image src={file.filePreview} />\n      ) : (\n        <>\n          <img\n            src={DocIcon}\n            className=\"file-icon\"\n            alt={catchFileNameFromPath(DocIcon)}\n          />\n          <div className=\"file-description\">\n            <Text text={file.filename} type=\"1\" weight=\"600\" />\n            <Text text={file.fileSize} weight=\"400\" type=\"2\" />\n          </div>\n        </>\n      )}\n    </a>\n  )\n}\nexport default FileIcon\n","import React, { useEffect } from 'react'\nimport Text from '../../atoms/Text'\nimport './style.scss'\nimport FileIcon from '../../atoms/FileIcon'\nexport type MessageItem = {\n  text: string\n  files: Array<string>\n  isFromMe: boolean\n  userName?: string\n}\n\nexport interface MessageProps {\n  messageItem: MessageItem\n}\n\nconst Message: React.FC<MessageProps> = ({\n  messageItem = { text: 'Hey!', isFromMe: true, files: [] },\n}) => {\n  return (\n    <>\n      <div\n        className={`messageBlock messageBlock__${\n          messageItem.isFromMe ? 'fromMe' : 'fromChat'\n        }`}\n      >\n        <Text text={messageItem.text} weight=\"400\" />\n        {messageItem.files.length !== 0\n          ? messageItem.files.map((value, index) => {\n              return <FileIcon key={`${value}${index}`} filepath={value} />\n            })\n          : null}\n      </div>\n    </>\n  )\n}\nexport default Message\n","export default __webpack_public_path__ + \"static/media/backIcon.d3fd6ea1.svg\";","import React from 'react'\r\nimport Text from '../../atoms/Text'\r\nimport './style.scss'\r\nimport { UserCardItem } from '../UserCard'\r\nimport DefaultAvatar from '../../../assets/img/defaultAvatar.svg'\r\nimport Avatar from '../../atoms/Avatar'\r\nimport BackIcon from '../../../assets/img/backIcon.svg'\r\nimport { catchFileNameFromPath } from '../../../assets/additionalFuntions'\r\n\r\ninterface ChatHeaderProps {\r\n  chattingUser?: UserCardItem\r\n  handleBackClick?: () => void\r\n}\r\n\r\nconst ChatHeader: React.FC<ChatHeaderProps> = ({\r\n  chattingUser = {\r\n    username: 'Marina Joe',\r\n    isOnline: false,\r\n    lastSeen: '3 minute ago',\r\n    avatar: DefaultAvatar,\r\n  },\r\n  handleBackClick,\r\n}) => {\r\n  return (\r\n    <div className=\"chatHeader\">\r\n      <img\r\n        onClick={handleBackClick}\r\n        src={BackIcon}\r\n        alt={catchFileNameFromPath(BackIcon)}\r\n      />\r\n      <Avatar avatarImage={DefaultAvatar} />\r\n      <div className=\"chatHeader-nameAndStatus\">\r\n        <Text text={chattingUser.username} isHeader type=\"3\" />\r\n        <Text\r\n          text={\r\n            chattingUser.isOnline\r\n              ? 'Online'\r\n              : `Last seen ${chattingUser.lastSeen}`\r\n          }\r\n          color=\"#949494\"\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default ChatHeader\r\n","export default __webpack_public_path__ + \"static/media/sendMessage.bff66a4e.svg\";","export default __webpack_public_path__ + \"static/media/pinFile.cc6bfb49.svg\";","import { createEvent, createStore } from 'effector'\n\ninterface WebsocketStore {\n  websocket?: WebSocket\n}\n\nexport const setWebsocket = createEvent<WebSocket>()\n\nexport const $WebsocketStore = createStore<WebsocketStore>({}).on(\n  setWebsocket,\n  (state, websocket) => {\n    const newState = state\n    newState.websocket = websocket\n    return newState\n  }\n)\n","import { createEvent, createStore } from 'effector'\r\nimport { UserResponse } from './userListStore'\r\n\r\nexport const setMyProfileDataStore = createEvent<UserResponse>()\r\n\r\nexport interface IMyProfileDataStore {\r\n  name: string\r\n  gender: string\r\n}\r\n\r\nexport const $MyProfileDataStore = createStore<IMyProfileDataStore>(\r\n  {} as IMyProfileDataStore\r\n).on(setMyProfileDataStore, (state, user: UserResponse) => {\r\n  state.name = user.name\r\n  state.gender = user.gender\r\n})\r\n","import React, {\n  ChangeEvent,\n  useState,\n} from 'react'\nimport SendIcon from '../../../assets/img/sendMessage.svg'\nimport PinIcon from '../../../assets/img/pinFile.svg'\nimport './style.scss'\nimport URLS from '../../../ApiUrl.json'\nimport {\n  AJAX,\n  catchFileNameFromPath,\n  isAllowedDataFile,\n} from '../../../assets/additionalFuntions'\nimport { useStore } from 'effector-react'\nimport { $WebsocketStore } from '../../../store/websocketStore'\nimport { useParams } from 'react-router-dom'\nimport { $MyProfileDataStore } from '../../../store/myProfileDataStore'\nimport FileIcon from '../../atoms/FileIcon'\n\nconst ChatInput: React.FC = () => {\n  const [progress, setProgress] = useState<number>()\n  const [isLoaded, setIsLoaded] = useState<boolean>(true)\n  const [inputMessage, setInputMessage] = useState<string>('')\n  const [fileError, setFileError] = useState<string>('')\n  const [filesUrls, setFilesUrls] = useState<Array<string>>([])\n  const handleMessageChange = (event: React.FormEvent<HTMLInputElement>) => {\n    setInputMessage(event.currentTarget.value)\n  }\n  const { username } = useParams<{ username?: string }>()\n  const myProfileDataStore = useStore($MyProfileDataStore)\n  const websocketStore = useStore($WebsocketStore)\n  const handleSendMessage = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    if ((inputMessage.length > 0 || filesUrls.length > 0) && isLoaded) {\n      const message = {\n        type: 'chats',\n        data: {\n          text: inputMessage,\n          files: filesUrls,\n          usersender: myProfileDataStore.name,\n          userreciver: username,\n        },\n      }\n      websocketStore.websocket?.send(`\"${JSON.stringify(message)}\"`)\n      setFilesUrls([])\n      setInputMessage('')\n    }\n  }\n  const handleFilesChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setIsLoaded(false)\n    setFileError('')\n    const file = event.currentTarget.files\n    if (file?.[0]) {\n      if (file[0].size > 2097152) {\n        setFileError('Max size of file 2MB')\n        return\n      }\n      if (!isAllowedDataFile(file[0].type)) {\n        setFileError('Not allowed type of data')\n        return\n      }\n\n      const reqParams = {\n        files: file,\n      }\n      AJAX({\n        url: `${URLS.API_URL}/api/upload`,\n        method: 'POST',\n        data: reqParams,\n        events: {\n          success: (responseText, xhr) => {\n            setIsLoaded(true)\n            setFilesUrls([...filesUrls, `${URLS.API_URL}/${responseText}`])\n          },\n          error: (responseText, xhr) => {\n            setFileError(responseText)\n          },\n          progress: (event) => {\n            setProgress(event?.loaded / event?.total)\n          },\n        },\n      })\n    }\n  }\n\n  return (\n    <>\n      {filesUrls.length > 0 ? (\n        <div className=\"previewFile\">\n          {filesUrls.map((value) => {\n            return (\n              <div key={value}>\n                <FileIcon filepath={value} />\n              </div>\n            )\n          })}\n        </div>\n      ) : null}\n\n      <form className=\"chatInput\" onSubmit={handleSendMessage}>\n        <label>\n          <p className=\"chatInput-fileError\">{fileError}</p>\n          <img src={PinIcon} alt={catchFileNameFromPath(PinIcon)} />\n          <input\n            className=\"chatInput-file\"\n            type=\"file\"\n            onChange={handleFilesChange}\n          />\n        </label>\n        <input\n          className=\"chatInput-file\"\n          name=\"files\"\n          value={filesUrls}\n          readOnly\n        />\n        <input\n          className=\"chatInput-messageInput\"\n          placeholder=\"Write something...\"\n          value={inputMessage}\n          onChange={handleMessageChange}\n        />\n        <label>\n          <img src={SendIcon} alt={catchFileNameFromPath(SendIcon)} />\n          <input className=\"chatInput-submit\" type=\"submit\" />\n        </label>\n      </form>\n    </>\n  )\n}\nexport default ChatInput\n","import { MessageItem } from '../components/molecules/Message'\nimport { createEffect, createEvent, createStore } from 'effector'\n\nexport interface ChatItemStore {\n  username?: string\n  messages?: Array<MessageItem>\n}\n\nexport const setMessages = createEvent<void>()\n\nexport const sendMessage = createEffect()\n\nexport const saveMessage = createEvent<MessageItem>()\n\nexport const $ChatStore = createStore<Array<ChatItemStore>>([])\n  .on(setMessages, (state) => {\n    let newState: Array<ChatItemStore> = state\n    const localChats = localStorage.getItem('chats')\n    if (localChats !== null) {\n      newState = JSON.parse(localChats)\n      return newState\n    } else {\n      localStorage.setItem('chats', JSON.stringify([] as Array<ChatItemStore>))\n    }\n  })\n  .on(saveMessage, (state, message: MessageItem) => {\n    const newState = [...state]\n    const ChatItem = state.find((value) => {\n      if (value.username === message.userName) {\n        return value\n      } else {\n        return false\n      }\n    })\n    if (ChatItem) {\n      newState.forEach((value) => {\n        if (value.username === message.userName) {\n          value.messages?.push(message)\n        }\n      })\n    } else {\n      newState.push({\n        username: message.userName,\n        messages: [message],\n      })\n    }\n\n    localStorage.setItem('chats', JSON.stringify(newState))\n    console.log(newState === state)\n    return newState\n  })\n","import React, { createRef, useEffect,  useState } from 'react'\nimport Message, { MessageItem } from '../../molecules/Message'\nimport Text from '../../atoms/Text'\nimport ChatHeader from '../../molecules/ChatHeader'\nimport ChatInput from '../../molecules/ChatInput'\nimport './style.scss'\nimport { UserCardItem } from '../../molecules/UserCard'\nimport { useStore } from 'effector-react'\nimport { $ChatStore} from '../../../store/chatStore'\nimport { useParams } from 'react-router-dom'\nimport { $userList } from '../../../store/userListStore'\n\ninterface ChatAreaProps {\n  handleBackClick?: () => void\n}\nconst ChatArea: React.FC<ChatAreaProps> = ({ children, handleBackClick }) => {\n  const chatRef: React.RefObject<HTMLDivElement> = createRef<HTMLDivElement>()\n\n  const { username } = useParams<{ username?: string }>()\n\n  const userListStore = useStore($userList)\n\n  const chatStore = useStore($ChatStore)\n\n  const [messages, setMessages] = useState<Array<MessageItem>>([])\n\n  const [chattingUser, setChattingUser] = useState<UserCardItem | undefined>(\n    userListStore.find((value) => {\n      if (value.username === username) {\n        return value\n      } else {\n        return false\n      }\n    })\n  )\n\n  useEffect(() => {\n    setChattingUser(\n      userListStore.find((value) => {\n        if (value.username === username) {\n          return value\n        } else {\n          return false\n        }\n      })\n    )\n  }, [username])\n\n  useEffect(() => {\n    chatRef.current?.scrollTo(0, chatRef.current?.scrollHeight)\n  }, [username])\n\n  useEffect(() => {\n    const msgs = chatStore.find((value) => {\n      if (value.username === username) {\n        return value.messages\n      } else {\n        return false\n      }\n    })\n    if (msgs?.messages) {\n      setMessages(msgs.messages)\n    } else {\n      setMessages([])\n    }\n  }, [chatStore, username])\n\n  return (\n    <div className=\"chatArea\">\n      <ChatHeader\n        handleBackClick={handleBackClick}\n        chattingUser={chattingUser}\n      />\n\n      <div\n        ref={chatRef}\n        className={`chatArea-messageList chatArea-messageList__${\n          messages?.length !== 0 ? 'withMsg' : 'noMsg'\n        }`}\n      >\n        {messages?.length !== 0 ? (\n          messages?.map((message: MessageItem, index: number) => {\n            return (\n              <Message key={`${message.text}${index}`} messageItem={message} />\n            )\n          })\n        ) : (\n          <Text text=\"Write first\" />\n        )}\n      </div>\n      {children}\n      <ChatInput />\n    </div>\n  )\n}\n\nexport default ChatArea\n","export default __webpack_public_path__ + \"static/media/chatBeautyBackground.c08ad226.svg\";","import AppHeader from '../../organisms/AppHeader'\nimport UserList from '../../organisms/UserList'\nimport React from 'react'\nimport './style.scss'\nimport ChatArea from '../../organisms/ChatArea'\nimport BeautyBG from '../../../assets/img/chatBeautyBackground.svg'\nimport Text from '../../atoms/Text'\n\ninterface ChatLayoutProps {\n  username?: string\n  isChatDisplay?: boolean\n  handleBackClick?: () => void\n  handleUserCardClick?: React.MouseEventHandler<HTMLDivElement>\n}\n\nconst ChatLayout: React.FC<ChatLayoutProps> = ({\n  username,\n  isChatDisplay,\n  handleBackClick,\n  handleUserCardClick,\n}) => {\n  const displayStyle: React.CSSProperties = {\n    backgroundImage: `url(${BeautyBG})`,\n  }\n  const chatSlider: React.CSSProperties = {}\n  if (isChatDisplay) {\n    chatSlider.marginLeft = '-100%'\n  } else {\n    chatSlider.marginLeft = '0'\n  }\n\n  return (\n    <>\n      <AppHeader />\n      <section style={chatSlider} className=\"chatContainer\">\n        <UserList handleUserCardClick={handleUserCardClick} />\n        <div className=\"chatContainer-chat\" style={displayStyle}>\n          {username !== undefined ? (\n            <ChatArea handleBackClick={handleBackClick} />\n          ) : (\n            <Text text=\"Select a chat to stray messaging\" />\n          )}\n        </div>\n      </section>\n    </>\n  )\n}\nexport default ChatLayout\n","import React, { useEffect, useState } from 'react'\nimport ChatLayout from '../../components/templates/ChatLayout'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { MessageItem } from '../../components/molecules/Message'\nimport { SCREENS } from '../../routes/endpoints'\nimport {\n  removeUsersFromStore,\n  setUserStore,\n  updateUserSelect,\n  updateUsersStore,\n  UserResponse,\n} from '../../store/userListStore'\nimport { setGenderList } from '../../store/genderListStore'\nimport URLS from '../../ApiUrl.json'\nimport { useStore } from 'effector-react'\nimport { getGenderList } from '../../assets/additionalFuntions'\nimport {\n  $MyProfileDataStore,\n  setMyProfileDataStore,\n} from '../../store/myProfileDataStore'\nimport { saveMessage, setMessages } from '../../store/chatStore'\nimport { setWebsocket } from '../../store/websocketStore'\n\nconst Chat: React.FC = () => {\n  const history = useHistory()\n  const myProfileDataStore = useStore($MyProfileDataStore)\n\n  let connectKey: string | null = null\n  if (localStorage.getItem('websocket') === undefined) {\n    history.push(`${SCREENS.SCREEN_LOGIN}`)\n  } else {\n    connectKey = localStorage.getItem('websocket')\n    if (connectKey) {\n      connectKey = connectKey.replaceAll('\"', '')\n    } else {\n      history.push(`${SCREENS.SCREEN_LOGIN}`)\n    }\n  }\n  const { username } = useParams<{ username?: string }>()\n  if (username) {\n    updateUserSelect(username)\n  }\n\n  const [isChatDisplay, setIsChatDisplay] = useState<boolean>(false)\n\n  const handleBackClick = () => {\n    setIsChatDisplay(false)\n    history.push(`${SCREENS.SCREEN_CHAT}/0`)\n  }\n\n  const handleUserCardClick = (event: React.MouseEvent<HTMLDivElement>) => {\n    if (window.matchMedia('(max-width: 768px)').matches) {\n      setIsChatDisplay(true)\n    }\n    history.push(\n      `${SCREENS.SCREEN_CHAT}/${event.currentTarget.getAttribute(\n        'data-username'\n      )}`\n    )\n  }\n\n  useEffect(() => {\n    if (window.matchMedia('(max-width: 768px)').matches) setIsChatDisplay(false)\n    setMessages()\n    getGenderList()\n      .then((response) => {\n        setGenderList(response)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n    const websocket = new WebSocket(\n      `${URLS.WS_URL}/?type=test&ws_id=${connectKey}`\n    )\n    websocket.onmessage = async function (msg) {\n      try {\n        let messageData = msg.data\n        if (messageData === \"Get param 'ws_id' - is wrong! Please relogin!\") {\n          history.push(`${SCREENS.SCREEN_LOGIN}`)\n        } else if (\n          messageData[0] === '\"' &&\n          messageData[messageData.length - 1]\n        ) {\n          messageData = msg.data.slice(1)\n          messageData = messageData.slice(0, -1)\n        }\n        const decodeMsg = await JSON.parse(messageData)\n        if (decodeMsg?.type === 'users_list') {\n          removeUsersFromStore()\n          decodeMsg?.data.forEach(\n            (\n              value: UserResponse,\n              index: number,\n              array: Array<UserResponse>\n            ) => {\n              if (\n                value.name === myProfileDataStore.name &&\n                value.gender === myProfileDataStore.gender\n              ) {\n                array.splice(index, 1)\n              }\n            }\n          )\n          setUserStore(decodeMsg?.data)\n        } else if (decodeMsg?.type === 'user_data') {\n          setMyProfileDataStore(decodeMsg?.data)\n        } else if (decodeMsg?.type === 'chats') {\n          const message: MessageItem = {\n            userName: decodeMsg.data.userreciver,\n            files: decodeMsg.data.files,\n            isFromMe: false,\n            text: decodeMsg.data.text,\n          }\n          if (decodeMsg.data?.usersender === myProfileDataStore.name) {\n            message.isFromMe = true\n          } else if (decodeMsg.data?.userreciver === myProfileDataStore.name) {\n            message.userName = decodeMsg.data?.usersender\n          }\n          saveMessage(message)\n        }\n      } catch (e) {\n        console.log(e)\n      }\n    }\n    websocket.onopen = () => {\n      updateUsersStore(websocket)\n    }\n    websocket.onclose = () => {\n      removeUsersFromStore()\n      localStorage.removeItem('websocket')\n    }\n    setWebsocket(websocket)\n  }, [])\n\n  return (\n    <ChatLayout\n      handleUserCardClick={handleUserCardClick}\n      handleBackClick={handleBackClick}\n      isChatDisplay={isChatDisplay}\n      username={username}\n    />\n  )\n}\nexport default Chat\n","import React from 'react'\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\nimport { SCREENS } from './endpoints'\nimport Authorization from '../pages/Authorization'\nimport Chat from '../pages/Chat'\n\nconst Routes: React.FC = () => {\n  return (\n    <Switch>\n      <Route path={SCREENS.SCREEN_LOGIN} exact>\n        <Authorization />\n      </Route>\n      <Route path={SCREENS.SCREEN_REGISTER} exact>\n        <Authorization />\n      </Route>\n      <Route path={SCREENS.SCREEN_CHAT} exact>\n        <Chat />\n      </Route>\n      <Route path={SCREENS.SCREEN_CONVERSATION}>\n        <Chat />\n      </Route>\n      <Redirect to={SCREENS.SCREEN_LOGIN} />\n    </Switch>\n  )\n}\n\nexport default withRouter(Routes)\n","import React from 'react'\r\nimport 'normalize.css'\r\nimport './App.css'\r\nimport Routes from './routes'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n        <Routes />\r\n      </BrowserRouter>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}