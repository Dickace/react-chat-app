{"version":3,"sources":["routes/endpoints.ts","components/atoms/Text/index.tsx","assets/img/chatlogo.svg","assets/additionalFuntions/index.ts","components/atoms/AppLogo/index.tsx","components/molecules/WellcomeHeader/index.tsx","assets/img/info.svg","components/atoms/InputField/index.tsx","components/atoms/Button/index.tsx","components/atoms/Captcha/index.tsx","components/molecules/LoginForm/index.tsx","components/organisms/WellcomeArea/index.tsx","assets/img/beautyBackground.svg","assets/img/beautyBackgroundMobile.svg","components/atoms/BeautifulBackground/index.tsx","components/templates/LoginLayout/index.tsx","pages/Authorization/index.tsx","assets/img/defaultAvatar.svg","components/atoms/Avatar/index.tsx","assets/img/accounticon.svg","components/organisms/AppHeader/index.tsx","components/molecules/UserCard/index.tsx","assets/img/nousericon.svg","components/organisms/UserList/index.tsx","assets/img/fileIcon.svg","components/atoms/Image/index.tsx","components/atoms/FileIcon/index.tsx","components/molecules/Message/index.tsx","assets/img/backIcon.svg","components/molecules/ChatHeader/index.tsx","assets/img/sendMessage.svg","assets/img/pinFile.svg","components/molecules/ChatInput/index.tsx","components/organisms/ChatArea/index.tsx","assets/img/chatBeautyBackground.svg","components/templates/ChatLayout/index.tsx","assets/img/Vasserman_logo.jpg","assets/img/gachi-fist.gif","assets/img/evangelion-smug.gif","assets/img/funny-animals.gif","pages/Chat/index.tsx","routes/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SCREENS","Text","isHeader","type","text","children","size","weight","color","styleText","undefined","fontSize","fontWeight","parseInt","className","style","catchFileNameFromPath","path","separatingPath","split","length","AppLogo","src","ChatLogo","alt","WellcomeHeader","InputField","placeholder","label","value","onChange","msg","handleStyleChange","handleMsg","onFocus","onBlur","InfoIcon","Button","onClick","Captcha","captchaImg","captcha","handleCaptchaChange","handleRefreshCaptchaClick","LoginForm","handleLoginSubmit","useState","userInputStyle","setUserInputStyle","passwordInputStyle","setPasswordInputStyle","username","setUsername","password","setPassword","setCaptcha","usernameErrorMsg","setUsernameErrorMsg","passwordErrorMsg","setPasswordErrorMsg","setCaptchaImg","fetchCaptcha","a","fetch","URLS","API_URL","method","credentials","response","console","log","headers","has","ok","blob","imgBlob","URL","createObjectURL","status","useEffect","catch","err","event","currentTarget","preventDefault","isValid","WellcomeArea","BeautifulBackground","loginBg","BeautyBG","window","matchMedia","matches","BeautyBGMobile","LoginLayout","Authorization","form","FormData","append","body","then","Avatar","avatarImage","DefaultAvatar","AppHeader","AccountIcon","boxShadow","UserCard","userCard","recentMsg","isFromMe","selected","chatId","handleClickUserCard","isSelected","avatar","NoUserIconStyle","height","width","borderRadius","UserList","userList","handleUserCardClick","map","index","to","SCREEN_CHAT","NoUserIcon","Image","FileIcon","file","filename","fileSize","filePreview","DocIcon","fileFormat","Message","messageItem","files","ChatHeader","chattingUser","isOnline","lastSeen","handleBackClick","BackIcon","ChatInput","onSubmit","inputMessage","setInputMessage","PinIcon","SendIcon","ChatArea","messageList","handleSendMessage","chatRef","createRef","current","scrollTo","scrollHeight","ref","message","ChatLayout","ContactList","MessageList","isChatDisplay","displayStyle","backgroundImage","chatSlider","marginLeft","Chat","useParams","id","setIsChatDisplay","Message1","Message2","Message3","Message4","Message5","Message7","Gachi","Aska","Rick","Message6","Picture","ChattingUser","forEach","Routes","SCREEN_LOGIN","exact","SCREEN_CONVERSATION","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36707491.chunk.js","sourcesContent":["export enum SCREENS {\n  SCREEN_LOGIN = '/login',\n  SCREEN_CHAT = '/chat',\n  SCREEN_CONVERSATION = '/chat/:chatId(\\\\d+)',\n}\n","import React from 'react'\nimport './style.scss'\n\ninterface TextProps {\n  type?: string\n  text?: string\n  isHeader?: boolean\n  size?: string\n  weight?: string\n  color?: string\n  children?: React.ReactElement | string\n}\n\nconst Text: React.FC<TextProps> = ({\n  isHeader = false,\n  type = '1',\n  text = ' ',\n  children,\n  size,\n  weight,\n  color,\n}) => {\n  const styleText: React.CSSProperties = {}\n  if (size !== undefined) {\n    styleText.fontSize = size\n  }\n  if (weight !== undefined) {\n    styleText.fontWeight = parseInt(weight)\n  }\n  if (color !== undefined) {\n    styleText.color = color\n  }\n  return (\n    <>\n      {isHeader ? (\n        <p\n          className={`textBlock-header textBlock-header__${type}`}\n          style={styleText}\n        >\n          {text}\n        </p>\n      ) : (\n        <p\n          className={`textBlock-plain textBlock-plain__${type}`}\n          style={styleText}\n        >\n          {text}\n        </p>\n      )}\n      {children}\n    </>\n  )\n}\nexport default Text\n","export default __webpack_public_path__ + \"static/media/chatlogo.c96a0da5.svg\";","export function sizeConvert(size: number): string {\n  let newSize = size / 1024\n  if (newSize > 512) {\n    newSize = newSize / 1024\n    if (newSize > 512) {\n      newSize = newSize / 1024\n      return `${newSize.toFixed(2)} GB`\n    } else {\n      return `${newSize.toFixed(2)} MB`\n    }\n  } else {\n    return `${newSize.toFixed(2)} KB`\n  }\n}\nexport function catchFileNameFromPath(path: string): string {\n  const separatingPath: string[] = path.split('/')\n  return separatingPath[separatingPath.length - 1].split('.')[0]\n}\n","import ChatLogo from '../../../assets/img/chatlogo.svg'\nimport React from 'react'\nimport { catchFileNameFromPath } from '../../../assets/additionalFuntions'\n\nconst AppLogo: React.FC = () => {\n  return (\n    <img\n      className=\"applogo\"\n      src={ChatLogo}\n      alt={catchFileNameFromPath(ChatLogo)}\n    />\n  )\n}\nexport default AppLogo\n","import React from 'react'\r\nimport Text from '../../atoms/Text'\r\nimport './style.scss'\r\nimport AppLogo from '../../atoms/AppLogo'\r\n\r\nconst WellcomeHeader: React.FC = () => {\r\n  return (\r\n    <div className=\"wellcomeHeader\">\r\n      <AppLogo />\r\n      <div className=\"wellcomeHeader-string\">\r\n        <Text text=\"Wellcome to&nbsp;\" type=\"1\" isHeader />\r\n        <Text text=\"Chatty\" isHeader type=\"1\" color=\"#5E93E7\" />\r\n        <Text text=\"!\" isHeader type=\"1\" color=\"#B3CDF8\" />\r\n      </div>\r\n      <Text text=\"Please, authorize yourself\" isHeader type=\"2\" />\r\n    </div>\r\n  )\r\n}\r\nexport default WellcomeHeader\r\n","export default __webpack_public_path__ + \"static/media/info.410775e6.svg\";","import React from 'react'\nimport './style.scss'\nimport InfoIcon from '../../../assets/img/info.svg'\nimport { catchFileNameFromPath } from '../../../assets/additionalFuntions'\n\ntype Props = {\n  placeholder: string\n  label: string\n  type?: string\n  layoutType?: string\n  style?: string\n  msg?: string\n  value?: string\n  handleStyleChange: (style: string) => void\n  onChange?: (event: React.FormEvent<HTMLInputElement>) => void\n  handleMsg: (msg: string) => void\n  children?: React.ReactElement | string\n}\n\nconst InputField: React.FC<Props> = ({\n  placeholder = 'InputText',\n  label = 'Input field',\n  type = 'text',\n  style = 'regular',\n  value = '',\n  onChange,\n  msg = '',\n  children,\n  handleStyleChange,\n  handleMsg,\n}) => {\n  const handleFocus = () => {\n    handleMsg('')\n    handleStyleChange('typing')\n  }\n  const handleBlur = () => {\n    handleMsg('')\n    handleStyleChange('regular')\n  }\n\n  return (\n    <>\n      <label className=\"inputField\">\n        <span className=\"inputField-label\">{label}</span>\n        <input\n          className={`inputField-input inputField-input__${style}`}\n          value={value}\n          type={type}\n          placeholder={placeholder}\n          onChange={onChange}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n        />\n        {msg ? (\n          <>\n            <img\n              className=\"inputField-msgIcon\"\n              src={InfoIcon}\n              alt={catchFileNameFromPath(InfoIcon)}\n            />\n            <p className={`inputField-msg inputField-msg__${style}`}>{msg}</p>\n          </>\n        ) : null}\n      </label>\n      {children}\n    </>\n  )\n}\nexport default InputField\n","import React from 'react'\nimport './style.scss'\n\nexport interface ButtonProps {\n  children?: React.ReactElement | string\n  text: string\n  style?: string\n  type?: 'button' | 'submit' | 'reset' | undefined\n  onClick?: (event: React.FormEvent<HTMLButtonElement>) => void\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  text,\n  style = 'regular',\n  onClick,\n  type = 'button',\n  children,\n}) => {\n  return (\n    <button type={type} className={`button button__${style}`} onClick={onClick}>\n      {text}\n      {children}\n    </button>\n  )\n}\n\nexport default Button\n","import React from 'react'\nimport { catchFileNameFromPath } from '../../../assets/additionalFuntions'\n\ninterface CaptchaProps {\n  captchaImg: string\n  captcha: string\n  handleCaptchaChange: (event: React.FormEvent<HTMLInputElement>) => void\n  handleRefreshCaptchaClick: () => void\n}\n\nconst Captcha: React.FC<CaptchaProps> = ({\n  captchaImg,\n  captcha,\n  handleCaptchaChange,\n  handleRefreshCaptchaClick,\n}) => {\n  return (\n    <label>\n      <span>Input captcha</span>\n      <img src={captchaImg} alt={catchFileNameFromPath(captchaImg)} />\n      <input type=\"text\" value={captcha} onChange={handleCaptchaChange} />\n      <div onClick={handleRefreshCaptchaClick}>Refresh captcha</div>\n    </label>\n  )\n}\nexport default Captcha\n","import React, { useEffect, useState } from 'react'\nimport InputField from '../../atoms/InputField'\nimport Button from '../../atoms/Button'\nimport './style.scss'\nimport Captcha from '../../atoms/Captcha'\nimport URLS from '../../../ApiUrl.json'\n\ninterface LoginFormProps {\n  handleLoginSubmit: (\n    username: string,\n    password: string,\n    captcha: string\n  ) => void\n  children?: React.ReactElement | string\n}\n\nconst LoginForm: React.FC<LoginFormProps> = ({\n  children = '',\n  handleLoginSubmit,\n}) => {\n  const [userInputStyle, setUserInputStyle] = useState<string>('regular')\n  const [passwordInputStyle, setPasswordInputStyle] =\n    useState<string>('regular')\n  const [username, setUsername] = useState<string>('')\n  const [password, setPassword] = useState<string>('')\n  const [captcha, setCaptcha] = useState<string>('')\n  const [usernameErrorMsg, setUsernameErrorMsg] = useState<string>('')\n  const [passwordErrorMsg, setPasswordErrorMsg] = useState<string>('')\n  const [captchaImg, setCaptchaImg] = useState<string>('')\n  const handleChangeUsername = (event: React.FormEvent<HTMLInputElement>) => {\n    setUsername(event.currentTarget.value)\n  }\n  const handleChangePassword = (event: React.FormEvent<HTMLInputElement>) => {\n    setPassword(event.currentTarget.value)\n  }\n  const handleChangeCaptcha = (event: React.FormEvent<HTMLInputElement>) => {\n    setCaptcha(event.currentTarget.value)\n  }\n  const handleRefreshCaptchaClick = () => {\n    fetchCaptcha().catch((err) => {\n      console.log(err)\n    })\n  }\n  const fetchCaptcha = async () => {\n    const response = await fetch(`${URLS.API_URL}/api/auth/captcha`, {\n      method: 'GET',\n      credentials: 'include',\n    })\n    console.log(response.headers.has('Set-cookie'))\n    if (response.ok) {\n      const imgBlob = await response.blob()\n      setCaptchaImg(URL.createObjectURL(imgBlob))\n    } else {\n      return `Error: ${response.status}`\n    }\n  }\n  useEffect(() => {\n    fetchCaptcha().catch((err) => {\n      console.log(err)\n    })\n  }, [])\n\n  const handleClickLogin = (event: React.FormEvent<HTMLButtonElement>) => {\n    event.preventDefault()\n    let isValid = true\n    if (username.length < 2) {\n      setUserInputStyle('error')\n      setUsernameErrorMsg('Must be more than two sign')\n      isValid = false\n    }\n    if (password.length < 2) {\n      setPasswordInputStyle('error')\n      setPasswordErrorMsg('Must be more than two sign')\n      isValid = false\n    }\n    if (isValid) {\n      handleLoginSubmit(username, password, captcha)\n    }\n  }\n\n  return (\n    <form className=\"loginForm\">\n      <div className=\"loginForm-inputGroup\">\n        <InputField\n          onChange={handleChangeUsername}\n          handleStyleChange={setUserInputStyle}\n          handleMsg={setUsernameErrorMsg}\n          msg={usernameErrorMsg}\n          style={userInputStyle}\n          value={username}\n          placeholder=\"Input user name\"\n          label=\"User name\"\n        />\n        <InputField\n          onChange={handleChangePassword}\n          handleStyleChange={setPasswordInputStyle}\n          handleMsg={setPasswordErrorMsg}\n          msg={passwordErrorMsg}\n          style={passwordInputStyle}\n          value={password}\n          placeholder=\"Input password\"\n          label=\"Input password\"\n          type=\"password\"\n        />\n        <Captcha\n          handleCaptchaChange={handleChangeCaptcha}\n          captcha={captcha}\n          captchaImg={captchaImg}\n          handleRefreshCaptchaClick={handleRefreshCaptchaClick}\n        />\n      </div>\n      {children}\n      <Button onClick={handleClickLogin} text=\"Log in\" />\n    </form>\n  )\n}\n\nexport default LoginForm\n","import WellcomeHeader from '../../molecules/WellcomeHeader'\nimport LoginForm from '../../molecules/LoginForm'\nimport './style.scss'\nimport React from 'react'\n\ninterface WellcomeAreaProps {\n  handleLoginSubmit: (\n    username: string,\n    password: string,\n    captcha: string\n  ) => void\n}\n\nconst WellcomeArea: React.FC<WellcomeAreaProps> = ({ handleLoginSubmit }) => {\n  return (\n    <div className=\"wellcomeArea\">\n      <WellcomeHeader />\n      <LoginForm handleLoginSubmit={handleLoginSubmit} />\n    </div>\n  )\n}\nexport default WellcomeArea\n","export default __webpack_public_path__ + \"static/media/beautyBackground.a8851126.svg\";","export default __webpack_public_path__ + \"static/media/beautyBackgroundMobile.5bb270b4.svg\";","import React from 'react'\nimport './style.scss'\nimport { catchFileNameFromPath } from '../../../assets/additionalFuntions'\nimport BeautyBG from '../../../assets/img/beautyBackground.svg'\nimport BeautyBGMobile from '../../../assets/img/beautyBackgroundMobile.svg'\n\nconst BeautifulBackground: React.FC = () => {\n  let loginBg: string = BeautyBG\n  if (window.matchMedia('(max-width: 768px)').matches) {\n    loginBg = BeautyBGMobile\n  }\n  return (\n    <img\n      className=\"beautyBackground\"\n      src={loginBg}\n      alt={catchFileNameFromPath(loginBg)}\n    />\n  )\n}\nexport default BeautifulBackground\n","import WellcomeArea from '../../organisms/WellcomeArea'\nimport BeautifulBackground from '../../atoms/BeautifulBackground'\nimport './style.scss'\nimport React from 'react'\n\ninterface LoginLayoutProps {\n  handleLoginSubmit: (\n    username: string,\n    password: string,\n    captcha: string\n  ) => void\n}\n\nconst LoginLayout: React.FC<LoginLayoutProps> = ({ handleLoginSubmit }) => {\n  return (\n    <section className=\"wellcomeTemplate\">\n      <article className=\"loginContainer\">\n        <WellcomeArea handleLoginSubmit={handleLoginSubmit} />\n      </article>\n      <BeautifulBackground />\n    </section>\n  )\n}\n\nexport default LoginLayout\n","import React from 'react'\r\nimport LoginLayout from '../../components/templates/LoginLayout'\r\n\r\nimport URLS from '../../ApiUrl.json'\r\n\r\nconst Authorization: React.FC = () => {\r\n  const handleLoginSubmit = async (\r\n    username: string,\r\n    password: string,\r\n    captcha: string\r\n  ) => {\r\n    const form: FormData = new FormData()\r\n    console.log(username, password, captcha)\r\n    form.append('login', username)\r\n    form.append('password', password)\r\n    form.append('captcha', captcha)\r\n    const response = await fetch(`${URLS.API_URL}/api/auth/login`, {\r\n      method: 'POST',\r\n      body: form,\r\n      credentials: 'include',\r\n    })\r\n      .then(async (response) => {\r\n        return await response.text()\r\n      })\r\n      .then((text) => {\r\n        console.log(text)\r\n      })\r\n  }\r\n\r\n  return <LoginLayout handleLoginSubmit={handleLoginSubmit} />\r\n}\r\nexport default Authorization\r\n","export default __webpack_public_path__ + \"static/media/defaultAvatar.639548b6.svg\";","import './style.scss'\n\nimport DefaultAvatar from '../../../assets/img/defaultAvatar.svg'\nimport React from 'react'\nimport { catchFileNameFromPath } from '../../../assets/additionalFuntions'\n\ninterface AvatarProps {\n  avatarImage?: string\n  style?: React.CSSProperties\n}\n\nconst Avatar: React.FC<AvatarProps> = ({\n  avatarImage = DefaultAvatar,\n  style,\n}) => {\n  return (\n    <img\n      style={style}\n      className=\"avatar\"\n      src={avatarImage}\n      alt={catchFileNameFromPath(avatarImage)}\n    />\n  )\n}\nexport default Avatar\n","export default __webpack_public_path__ + \"static/media/accounticon.dbb31048.svg\";","import AppLogo from '../../atoms/AppLogo'\r\nimport Avatar from '../../atoms/Avatar'\r\nimport './style.scss'\r\nimport AccountIcon from '../../../assets/img/accounticon.svg'\r\nimport React from 'react'\r\n\r\nconst AppHeader:React.FC = () => {\r\n  const AvatarStyle: React.CSSProperties = {\r\n    boxShadow: '0px 2px 8px rgba(0, 0, 0, 0.08)',\r\n  }\r\n  return (\r\n    <header className=\"appheader\">\r\n      <AppLogo />\r\n      <Avatar avatarImage={AccountIcon} style={AvatarStyle} />\r\n    </header>\r\n  )\r\n}\r\nexport default AppHeader\r\n","import React from 'react'\nimport Avatar from '../../atoms/Avatar'\nimport Text from '../../atoms/Text'\nimport './style.scss'\nexport type UserCardItem = {\n  username: string\n  recentMsg: string\n  isFromMe: boolean\n  isSelected: boolean\n  avatar?: string\n  chatId?: string\n  lastSeen?: string\n  isOnline?: boolean\n}\nexport interface UserCardProps {\n  userCard?: UserCardItem\n  handleClickUserCard?: () => void\n}\n\nconst UserCard: React.FC<UserCardProps> = ({\n  userCard = {\n    username: 'User name',\n    recentMsg: 'Hey!',\n    isFromMe: false,\n    selected: false,\n    chatId: '0',\n  },\n  handleClickUserCard,\n}) => {\n  return (\n    <div\n      onClick={handleClickUserCard}\n      data-selected={userCard.isSelected}\n      className={`userCard`}\n    >\n      <Avatar avatarImage={userCard.avatar} />\n      <div className=\"userCard-textBlock\">\n        <Text text={userCard.username} isHeader type=\"4\" />\n        <div className=\"userCard-msg\">\n          {userCard.isFromMe ? (\n            <Text\n              text=\"You:&nbsp;\"\n              type=\"2\"\n              color={userCard.isSelected ? '#FFFFFF' : '#5E93E7'}\n            />\n          ) : null}\n          <Text text={userCard.recentMsg} type=\"2\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default UserCard\n","export default __webpack_public_path__ + \"static/media/nousericon.2a176518.svg\";","import React from 'react'\nimport UserCard, { UserCardItem } from '../../molecules/UserCard'\nimport Avatar from '../../atoms/Avatar'\nimport './style.scss'\nimport NoUserIcon from '../../../assets/img/nousericon.svg'\nimport Text from '../../atoms/Text'\nimport { Link } from 'react-router-dom'\nimport { SCREENS } from '../../../routes/endpoints'\n\ninterface UserListProps {\n  userList?: Array<UserCardItem>\n  handleUserCardClick?: () => void\n}\n\nconst NoUserIconStyle: React.CSSProperties = {\n  height: '200px',\n  width: '200px',\n  borderRadius: '100px',\n}\n\nconst UserList: React.FC<UserListProps> = ({\n  userList,\n  handleUserCardClick,\n}) => {\n  return (\n    <>\n      {userList?.length !== 0 && userList ? (\n        <div className=\"userList\">\n          {userList.map((value: UserCardItem, index: number) => {\n            return (\n              <Link\n                key={`${value.chatId}${index}`}\n                to={`${SCREENS.SCREEN_CHAT}/${value.chatId}`}\n              >\n                <UserCard\n                  key={`${value.username}${index}`}\n                  handleClickUserCard={handleUserCardClick}\n                  userCard={value}\n                />\n              </Link>\n            )\n          })}\n        </div>\n      ) : (\n        <div className=\"userList userList__noUser\">\n          <Avatar avatarImage={NoUserIcon} style={NoUserIconStyle} />\n          <Text text=\"There is no other users yet\" size=\"15px\" />\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default UserList\n","export default __webpack_public_path__ + \"static/media/fileIcon.c4a3d7f0.svg\";","import React from 'react'\nimport { catchFileNameFromPath } from '../../../assets/additionalFuntions'\nimport './style.scss'\n\ninterface ImageProps {\n  src: string\n}\n\nconst Image: React.FC<ImageProps> = ({ src }) => {\n  return <img className=\"image\" src={src} alt={catchFileNameFromPath(src)} />\n}\nexport default Image\n","import React from 'react'\nimport DocIcon from '../../../assets/img/fileIcon.svg'\nimport './style.scss'\nimport Text from '../Text'\nimport Image from '../Image'\nimport { catchFileNameFromPath } from '../../../assets/additionalFuntions'\n\nexport type File = {\n  filename: string\n  fileSize: string\n  filePreview: string\n  fileFormat: string\n}\n\ninterface FileIconProps {\n  file?: File\n}\n\nconst FileIcon: React.FC<FileIconProps> = ({\n  file = {\n    filename: 'file_name_001',\n    fileSize: '2.4 MB',\n    filePreview: DocIcon,\n    fileFormat: 'doc',\n  },\n}) => {\n  return (\n    <div className=\"file\">\n      {file.fileFormat === 'jpg' ||\n      file.fileFormat === 'png' ||\n      file.fileFormat === 'jpeg' ||\n      file.fileFormat === 'gif' ? (\n        <Image src={file.filePreview} />\n      ) : (\n        <>\n          <img\n            src={DocIcon}\n            className=\"file-icon\"\n            alt={catchFileNameFromPath(DocIcon)}\n          />\n          <div className=\"file-description\">\n            <Text text={file.filename} type=\"1\" weight=\"600\" />\n            <Text text={file.fileSize} weight=\"400\" type=\"2\" />\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\nexport default FileIcon\n","import React from 'react'\r\nimport Text from '../../atoms/Text'\r\nimport './style.scss'\r\nimport FileIcon, { File } from '../../atoms/FileIcon'\r\n\r\nexport type MessageItem = {\r\n  text: string\r\n  files: Array<File>\r\n  isFromMe: boolean\r\n}\r\n\r\nexport interface MessageProps {\r\n  messageItem: MessageItem\r\n}\r\n\r\nconst Message: React.FC<MessageProps> = ({\r\n  messageItem = { text: 'Hey!', isFromMe: true, files: [] },\r\n}) => {\r\n  return (\r\n    <>\r\n      <div\r\n        className={`messageBlock messageBlock__${\r\n          messageItem.isFromMe ? 'fromMe' : 'fromChat'\r\n        }`}\r\n      >\r\n        <Text text={messageItem.text} weight=\"400\" />\r\n        {messageItem.files.length !== 0\r\n          ? messageItem.files.map((value, index) => {\r\n              return <FileIcon key={`${value.filename}${index}`} file={value} />\r\n            })\r\n          : null}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default Message\r\n","export default __webpack_public_path__ + \"static/media/backIcon.d3fd6ea1.svg\";","import React from 'react'\nimport Text from '../../atoms/Text'\nimport './style.scss'\nimport { UserCardItem } from '../UserCard'\nimport DefaultAvatar from '../../../assets/img/defaultAvatar.svg'\nimport Avatar from '../../atoms/Avatar'\nimport BackIcon from '../../../assets/img/backIcon.svg'\nimport { catchFileNameFromPath } from '../../../assets/additionalFuntions'\n\ninterface ChatHeaderProps {\n  chattingUser?: UserCardItem\n  handleBackClick?: () => void\n}\n\nconst ChatHeader: React.FC<ChatHeaderProps> = ({\n  chattingUser = {\n    username: 'Marina Joe',\n    isOnline: false,\n    lastSeen: '3 minute ago',\n    avatar: DefaultAvatar,\n  },\n  handleBackClick,\n}) => {\n  return (\n    <div className=\"chatHeader\">\n      <img\n        onClick={handleBackClick}\n        src={BackIcon}\n        alt={catchFileNameFromPath(BackIcon)}\n      />\n      <Avatar avatarImage={DefaultAvatar} />\n      <div className=\"chatHeader-nameAndStatus\">\n        <Text text={chattingUser.username} isHeader type=\"3\" />\n        <Text\n          text={\n            chattingUser.isOnline\n              ? 'Online'\n              : `Last seen ${chattingUser.lastSeen}`\n          }\n          color=\"#949494\"\n        />\n      </div>\n    </div>\n  )\n}\nexport default ChatHeader\n","export default __webpack_public_path__ + \"static/media/sendMessage.bff66a4e.svg\";","export default __webpack_public_path__ + \"static/media/pinFile.cc6bfb49.svg\";","import React, { useState } from 'react'\nimport SendIcon from '../../../assets/img/sendMessage.svg'\nimport PinIcon from '../../../assets/img/pinFile.svg'\nimport './style.scss'\nimport { catchFileNameFromPath } from '../../../assets/additionalFuntions'\n\ninterface ChatInputProps {\n  onSubmit?: () => void\n}\n\nconst ChatInput: React.FC<ChatInputProps> = ({ onSubmit }) => {\n  const [inputMessage, setInputMessage] = useState<string>('')\n  const handleMessageChange = (event: React.FormEvent<HTMLInputElement>) => {\n    setInputMessage(event.currentTarget.value)\n  }\n  return (\n    <form className=\"chatInput\" onSubmit={onSubmit}>\n      <label>\n        <img src={PinIcon} alt={catchFileNameFromPath(PinIcon)} />\n        <input className=\"chatInput-file\" type=\"file\" />\n      </label>\n      <input\n        className=\"chatInput-messageInput\"\n        placeholder=\"Write something...\"\n        value={inputMessage}\n        onChange={handleMessageChange}\n      />\n      <label>\n        <img src={SendIcon} alt={catchFileNameFromPath(SendIcon)} />\n        <input className=\"chatInput-submit\" type=\"submit\" />\n      </label>\n    </form>\n  )\n}\nexport default ChatInput\n","import React, { createRef, useEffect } from 'react'\r\nimport Message, { MessageItem } from '../../molecules/Message'\r\nimport Text from '../../atoms/Text'\r\nimport ChatHeader from '../../molecules/ChatHeader'\r\nimport ChatInput from '../../molecules/ChatInput'\r\nimport './style.scss'\r\nimport { UserCardItem } from '../../molecules/UserCard'\r\n\r\ninterface ChatAreaProps {\r\n  messageList?: Array<MessageItem>\r\n  chattingUser: UserCardItem\r\n  handleSendMessage?: () => void\r\n  handleBackClick?: () => void\r\n}\r\nconst ChatArea: React.FC<ChatAreaProps> = ({\r\n  messageList,\r\n  children,\r\n  handleSendMessage,\r\n  chattingUser,\r\n  handleBackClick,\r\n}) => {\r\n  const chatRef: React.RefObject<HTMLDivElement> = createRef<HTMLDivElement>()\r\n\r\n  useEffect(() => {\r\n    chatRef.current?.scrollTo(0, chatRef.current?.scrollHeight)\r\n  }, [chattingUser.chatId])\r\n\r\n  return (\r\n    <div className=\"chatArea\">\r\n      <ChatHeader\r\n        handleBackClick={handleBackClick}\r\n        chattingUser={chattingUser}\r\n      />\r\n      <div\r\n        ref={chatRef}\r\n        className={`chatArea-messageList chatArea-messageList__${\r\n          messageList?.length !== 0 ? 'withMsg' : 'noMsg'\r\n        }`}\r\n      >\r\n        {messageList?.length !== 0 ? (\r\n          messageList?.map((message: MessageItem, index: number) => {\r\n            return (\r\n              <Message key={`${message.text}${index}`} messageItem={message} />\r\n            )\r\n          })\r\n        ) : (\r\n          <Text text=\"Write first\" />\r\n        )}\r\n      </div>\r\n      {children}\r\n      <ChatInput onSubmit={handleSendMessage} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChatArea\r\n","export default __webpack_public_path__ + \"static/media/chatBeautyBackground.c08ad226.svg\";","import AppHeader from '../../organisms/AppHeader'\nimport UserList from '../../organisms/UserList'\nimport React from 'react'\nimport './style.scss'\nimport ChatArea from '../../organisms/ChatArea'\nimport { UserCardItem } from '../../molecules/UserCard'\nimport { MessageItem } from '../../molecules/Message'\nimport BeautyBG from '../../../assets/img/chatBeautyBackground.svg'\nimport Text from '../../atoms/Text'\n\ninterface ChatLayoutProps {\n  ContactList: Array<UserCardItem>\n  MessageList?: Array<MessageItem>\n  chatId?: string\n  chattingUser: UserCardItem\n  isChatDisplay?: boolean\n  handleBackClick?: () => void\n  handleUserCardClick?: () => void\n}\n\nconst ChatLayout: React.FC<ChatLayoutProps> = ({\n  ContactList,\n  MessageList,\n  chatId,\n  chattingUser,\n  isChatDisplay,\n  handleBackClick,\n  handleUserCardClick,\n}) => {\n  const displayStyle: React.CSSProperties = {\n    backgroundImage: `url(${BeautyBG})`,\n  }\n  const chatSlider: React.CSSProperties = {}\n  if (isChatDisplay) {\n    chatSlider.marginLeft = '-100%'\n  } else {\n    chatSlider.marginLeft = '0'\n  }\n\n  return (\n    <>\n      <AppHeader />\n      <section style={chatSlider} className=\"chatContainer\">\n        <UserList\n          handleUserCardClick={handleUserCardClick}\n          userList={ContactList}\n        />\n        <div className=\"chatContainer-chat\" style={displayStyle}>\n          {chatId !== undefined ? (\n            <ChatArea\n              handleBackClick={handleBackClick}\n              chattingUser={chattingUser}\n              messageList={MessageList}\n            />\n          ) : (\n            <Text text=\"Select a chat to stray messaging\" />\n          )}\n        </div>\n      </section>\n    </>\n  )\n}\nexport default ChatLayout\n","export default __webpack_public_path__ + \"static/media/Vasserman_logo.afef6b61.jpg\";","export default __webpack_public_path__ + \"static/media/gachi-fist.2252226d.gif\";","export default __webpack_public_path__ + \"static/media/evangelion-smug.7cebb251.gif\";","export default __webpack_public_path__ + \"static/media/funny-animals.c49c20a0.gif\";","import React, { useEffect, useState } from 'react'\nimport ChatLayout from '../../components/templates/ChatLayout'\nimport { useParams } from 'react-router-dom'\nimport { UserCardItem } from '../../components/molecules/UserCard'\nimport { MessageItem } from '../../components/molecules/Message'\nimport { File } from '../../components/atoms/FileIcon'\nimport Picture from '../../assets/img/Vasserman_logo.jpg'\nimport Gachi from '../../assets/img/gachi-fist.gif'\nimport Aska from '../../assets/img/evangelion-smug.gif'\nimport Rick from '../../assets/img/funny-animals.gif'\n\nconst Chat: React.FC = () => {\n  const { chatId } = useParams<{ chatId?: string }>()\n  let id: string | undefined = chatId\n\n  const [isChatDisplay, setIsChatDisplay] = useState<boolean>(false)\n\n  const handleBackClick = () => {\n    setIsChatDisplay(false)\n  }\n\n  const handleUserCardClick = () => {\n    if (window.matchMedia('(max-width: 768px)').matches) {\n      setIsChatDisplay(true)\n    }\n  }\n  useEffect(() => {\n    if (window.matchMedia('(max-width: 768px)').matches) setIsChatDisplay(false)\n  }, [])\n  //Ducks start\n  const User1: UserCardItem = {\n    username: 'Konstantin Konstantinopolski',\n    recentMsg: 'Hey!',\n    isFromMe: false,\n    isSelected: false,\n    chatId: '1',\n    lastSeen: '6 minute ago',\n    isOnline: false,\n  }\n  const User2: UserCardItem = {\n    username: 'Marina Joe',\n    recentMsg: 'Sed ut per...',\n    isFromMe: true,\n    isSelected: false,\n    chatId: '2',\n    lastSeen: '3 minute ago',\n    isOnline: true,\n  }\n  const User3: UserCardItem = {\n    username: 'Ernest Gillroy',\n    recentMsg: 'How are you doing?',\n    isFromMe: true,\n    isSelected: false,\n    chatId: '3',\n    lastSeen: '2 minute ago',\n    isOnline: false,\n  }\n  const User4: UserCardItem = {\n    username: 'Konstantin Konstantinopolski',\n    recentMsg: 'Hey!',\n    isFromMe: false,\n    isSelected: false,\n    chatId: '4',\n    lastSeen: '3 minute ago',\n    isOnline: true,\n  }\n  const file1: File = {\n    filename: 'File_for_exampl0011232555234.doc',\n    fileSize: '4.2 MB',\n    fileFormat: 'doc',\n    filePreview: '',\n  }\n  const file2: File = {\n    filename: 'Vasserman_logo',\n    fileSize: '2 MB',\n    fileFormat: 'jpg',\n    filePreview: Picture,\n  }\n  const file3: File = {\n    filename: 'За ФСУ',\n    fileSize: '4.2 MB',\n    fileFormat: 'gif',\n    filePreview: Gachi,\n  }\n  const file4: File = {\n    filename: '',\n    fileSize: '2 MB',\n    fileFormat: 'gif',\n    filePreview: Aska,\n  }\n  const file5: File = {\n    filename: 'Cacth',\n    fileSize: '2 MB',\n    fileFormat: 'gif',\n    filePreview: Rick,\n  }\n  const Message1: MessageItem = {\n    text: 'Sed ut perspiciatis unde omnis iste natus error sit voluptatem',\n    isFromMe: false,\n    files: [],\n  }\n  const Message2: MessageItem = {\n    text: 'SeSed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo.  accusantium doloremque laudantium, totam re',\n    isFromMe: true,\n    files: [],\n  }\n  const Message3: MessageItem = {\n    text: 'SeSed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo.',\n    isFromMe: false,\n    files: [],\n  }\n  const Message4: MessageItem = {\n    text: 'Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusanti',\n    isFromMe: true,\n    files: [],\n  }\n  const Message5: MessageItem = {\n    text: '',\n    isFromMe: true,\n    files: [file1],\n  }\n  const Message7: MessageItem = {\n    text: '',\n    isFromMe: false,\n    files: [file3, file4, file5],\n  }\n  const Message6: MessageItem = {\n    text: '',\n    isFromMe: true,\n    files: [file2],\n  }\n  let MessageList: Array<MessageItem> = []\n  let ChattingUser: UserCardItem = {\n    username: 'Marina Joe',\n    recentMsg: 'Sed ut per...',\n    isFromMe: true,\n    isSelected: false,\n    chatId: '2',\n    lastSeen: '3 minute ago',\n    isOnline: false,\n  }\n  const ContactList: Array<UserCardItem> = [User1, User2, User3, User4]\n  //Ducks end\n  ContactList.forEach((value) => {\n    if (value.chatId === chatId) {\n      value.isSelected = true\n      ChattingUser = value\n      return\n    }\n  })\n\n  //async request here (pseudo code)\n  //axios(`${API_URL}chats/${chatId}`,{headers: authHeader}).then((response)=>{ [].foreach(response, (value)=>{ Message.push({...})})})\n  //axios(`${API_URL}contacts/`,{headers: authHeader}).then((response)=>{ [].foreach(response, (value)=>{ ContactList.push({...})})})\n  switch (chatId) {\n    case '1':\n      MessageList = []\n      break\n    case '2':\n      MessageList = [Message1, Message2, Message3, Message5]\n      break\n    case '3':\n      MessageList = [Message1, Message7, Message2, Message3, Message6]\n      break\n    case '4':\n      MessageList = [\n        Message1,\n        Message2,\n        Message3,\n        Message4,\n        Message1,\n        Message2,\n        Message3,\n        Message4,\n      ]\n      break\n    default:\n      MessageList = []\n      id = undefined\n      break\n  }\n  return (\n    <ChatLayout\n      handleUserCardClick={handleUserCardClick}\n      handleBackClick={handleBackClick}\n      isChatDisplay={isChatDisplay}\n      chatId={id}\n      chattingUser={ChattingUser}\n      MessageList={MessageList}\n      ContactList={ContactList}\n    />\n  )\n}\nexport default Chat\n","import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport { SCREENS } from './endpoints'\nimport Authorization from '../pages/Authorization'\nimport Chat from '../pages/Chat'\n\nconst Routes: React.FC = () => {\n  return (\n    <Switch>\n      <Route path={SCREENS.SCREEN_LOGIN} exact>\n        <Authorization />\n      </Route>\n      <Route path={SCREENS.SCREEN_CHAT} exact>\n        <Chat />\n      </Route>\n      <Route path={SCREENS.SCREEN_CONVERSATION}>\n        <Chat />\n      </Route>\n      <Redirect to={SCREENS.SCREEN_LOGIN} />\n    </Switch>\n  )\n}\n\nexport default Routes\n","import React from 'react'\r\nimport 'normalize.css'\r\nimport './App.css'\r\nimport Routes from './routes'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n        <Routes />\r\n      </BrowserRouter>\r\n      {/*<div>*/}\r\n      {/*  <SpinLoader />*/}\r\n      {/*</div>*/}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals:(onPerfEntry?: ReportHandler) =>void = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}